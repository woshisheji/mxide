##中文库名称:Vant_输入框

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|<van-field ref="%s" :class="%s" :style="%s" v-model="%s" :label="%s" :name="%s" :id="%s" :type="%s" :size="%s" :maxlength="%s" :min="%s" :max="%s" :placeholder="%s" :border="%s" :disabled="%s" :readonly="%s" :colon="%s" :required="%s" :center="%s" :clearable="%s" :clear-icon="%s" :clear-trigger="%s" :clickable="%s" :is-link="%s" :autofocus="%s" :show-word-limit="%s" :error="%s" :error-message="%s" :error-message-align="%s" :formatter="%s" :format-trigger="%s" :arrow-direction="%s" :label-class="%s" :label-width="%s" :label-align="%s" :input-align="%s" :autosize="%s" :left-icon="%s" :right-icon="%s" :icon-prefix="%s" :rules="%s" @update:model-value="%s" @focus="%s" @blur="%s" @clear="%s" @click="%s" @click-input="%s" @click-left-icon="%s" @click-right-icon="%s" @start-validate="%s" @end-validate="%s" >|!!Vant_输入框_创建('','','','','','','','text','','','','','',true,false,false,false,'null',false,false,'clear','focus',false,false,false,false,false,'','left','','onChange','right','','6.2em','left','left',false,'','','','', , , , , , , , , , )||面向过程|注:在参数中,如果是文本型值(非变量时)，必须使用单引号嵌套起来例:'内容'  -组件用途: 用户可以在文本框内输入或编辑文字。 可以用单元格组作为容器|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||`''`| `组件型` | `''`| 在响应数据中的一个变量，用来绑定该组件(类似于:id=?) 可以在模板的事件中 使用该组件 |||`''`| `通用型` | `''`| 支持文本与动态变量，类样式,如没有特殊需求不推荐修改 |||`''`| `通用型` | `''`| 支持文本与动态变量，推荐使用响应数据中的css样式变量 |||`''`| `文本型` | `''`| [双向绑定模式必须填写 响应数据 中的某个变量绑定] ->当前输入的值 |||`''`| `文本型` | `''`| 输入框左侧文本 |||`''`| `文本型` | `''`| 名称，作为提交表单时的标识符 |||`''`| `文本型` | `''`| 输入框 id，同时会设置 label 的 for 属性 |||`'text'`| `文本型` | `'text'`| 输入框类型, 支持原生 input 标签的所有 type 属性，额外支持了 digit 类型 |||`''`| `文本型` | `''`| 大小，可选值为 large normal |||`''`| `文本型` | `''`| 输入的最大字符数 |||`''`| `数值型` | `''`| 输入框类型为 number 或 digit 类型时设置可允许的最小值 |||`''`| `数值型` | `''`| 输入框类型为 number 或 digit 类型时设置可允许的最大值 |||`''`| `文本型` | `''`| 输入框占位提示文字 |||`true`| `逻辑型` | `true`| 是否显示内边框 |||`false`| `逻辑型` | `false`| 是否禁用输入框 |||`false`| `逻辑型` | `false`| 是否为只读状态，只读状态下无法输入内容 |||`false`| `逻辑型` | `false`| 是否在 label 后面添加冒号 |||`'null'`| `逻辑型` | `'null'`| 是否显示表单必填星号 |||`false`| `逻辑型` | `false`| 是否使内容垂直居中 |||`false`| `逻辑型` | `false`| 是否启用清除图标，点击清除图标后会清空输入框 |||`'clear'`| `文本型` | `'clear'`| 清除图标名称或图片链接，等同于 Icon 组件的 name 属性 |||`'focus'`| `文本型` | `'focus'`| 显示清除图标的时机，always表示输入框不为空时展示focus 表示输入框聚焦且不为空时展示 |||`false`| `逻辑型` | `false`| 是否开启点击反馈 |||`false`| `逻辑型` | `false`| 是否展示右侧箭头并开启点击反馈 |||`false`| `逻辑型` | `false`| 是否自动聚焦，iOS 系统不支持该属性 |||`false`| `逻辑型` | `false`| 是否显示字数统计，需要设置 maxlength 属性 |||`false`| `逻辑型` | `false`| 是否将输入内容标红 |||`''`| `文本型` | `''`| 底部错误提示文案，为空时不展示 |||`'left'`| `文本型` | `'left'`| 错误提示文案对齐方式，可选值为 center right |||`''`| `文本型` | `''`| 输入内容格式化函数 |||`'onChange'`| `文本型` | `'onChange'`| 格式化函数触发的时机，可选值为 onBlur |||`'right'`| `文本型` | `'right'`| 箭头方向，可选值为 left up down |||`''`| `文本型` | `''`| 左侧文本额外类名 |||`'6.2em'`| `文本型` | `'6.2em'`| 左侧文本宽度，默认单位为 px |||`'left'`| `文本型` | `'left'`| 左侧文本对齐方式，可选值为 center right top |||`'left'`| `文本型` | `'left'`| 输入框对齐方式，可选值为 center right |||`false`| `逻辑型` | `false`| 是否自适应内容高度，只对 textarea 有效，可传入对象,如 { maxHeight: 100, minHeight: 50 }，单位为px |||`''`| `文本型` | `''`| 左侧图标名称或图片链接，等同于 Icon 组件的 name 属性 |||`''`| `文本型` | `''`| 右侧图标名称或图片链接，等同于 Icon 组件的 name 属性 |||`''`| `文本型` | `''`| 图标类名前缀，等同于 Icon 组件的 class-prefix 属性 |||`''`| `文本型` | `''`| 表单校验规则，详见 Form 组件 |||` `| `子程序指针` | ` `| 输入框内容变化时触发 [传递参数:value: string (当前输入的值)] |||` `| `子程序指针` | ` `| 输入框获得焦点时触发 [传递参数:event: Event] |||` `| `子程序指针` | ` `| 输入框失去焦点时触发 [传递参数:event: Event] |||` `| `子程序指针` | ` `| 点击清除按钮时触发 [传递参数:event: MouseEvent] |||` `| `子程序指针` | ` `| 点击组件时触发 [传递参数:event: MouseEvent] |||` `| `子程序指针` | ` `| 点击输入区域时触发 [传递参数:event: MouseEvent] |||` `| `子程序指针` | ` `| 点击左侧图标时触发 [传递参数:event: MouseEvent] |||` `| `子程序指针` | ` `| 点击右侧图标时触发 [传递参数:event: MouseEvent] |||` `| `子程序指针` | ` `| 开始表单校验时触发 [传递参数:-] |||` `| `子程序指针` | ` `| 结束表单校验时触发 [传递参数:{ status: string, message: string }] |
|</van-field>|""Vant_输入框_创建结束()||面向过程|Vant组件中的:[van-field] 组件|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

##使用说明:

当命令有 ""开头 则最后有 !! 命令形成闭环，闭环中不允许将`响应数据ref`和`事件接口`部分写到这里。

```墨香中文编程 
!!ELM_滑块_创建(参数一,参数二,参数三)
//这里是其他组件插槽
""ELM_滑块_创建结束
```
###代码规则
####在代码下一行添加注释 例如://这是注释内容，这一行可以换成真实注释。
#### 禁止方法`ELM_上传_创建()`的参数换行!
###代码使用案例
```墨香中文编程 
!!ELM_上传_创建('http://api.example.com/upload', #ELM_上传_请求方法_POST, 数据.请求头, 数据.上传文件列表, 假, 假, 数据.上传字段名, 假, true, , , &事件上传成功, &事件上传失败, , , , 1, 真, 真, 'image/*', , , #ELM_上传_列表类型_PICTURE_CARD, '', 数据.上传样式, 当前.名称)

""ELM_上传_创建结束()
```
##规则二
###如果命令中例如：ELM_xx()，命令前面并没有开头则表示普通方法命令，不需要结束语句闭环。
###普通方法参数也必须在一行不允许换行，例如:

```墨香中文编程 
ELM_按钮_创建('','',false,false,false,false,false,false,'button','','', ,'','墨香中文编程')
```

##响应数据ref
输出在单独代码框

###ref绑定数据在**VUE模板**中:所有成员都放在 `数据` 对象上
```墨香中文编程 
351100变量名类型备用备注8|11|4|341|2|3|4
350000数据VUE数据用于当前全局可以操作的动态响应数据
数据.滑块值=1
数据 = VUE_创建响应数据(数据)
```
####响应案例:
```墨香中文编程 
351100变量名类型备用备注8|11|4|341|2|3|4
350000数据VUE数据用于当前全局可以操作的动态响应数据
350000上传样式CSS样式对象
 // 响应式对象 - 变化会被 Vue 追踪
数据.名称 = '上传图片'
数据.测试 = '点击它可以出现一个新按钮'
数据.可视 = 假
数据.图标 = '<Edit />'
数据.上传字段名 = 'file'

数据.上传地址 = 'http://api.example.com/upload'
数据.上传文件列表 = []
数据.请求头 = {}
 // 设置上传样式
上传样式.width = "300px"
 // ...其他样式
数据.上传样式 = 上传样式
 // 如果需要动态响应数据，则需要通过以下命令转换。
数据 = VUE_创建响应数据(数据)

```


##事件接口
输出在单独代码框

###挂接事件: 以下是一个事件的完整代码 `xx名称` 部分才是可修改部分 
231000,241100,351100这三行均为代码格式固定不允许修改。 如果没有参数:240000内容则241100移除。 如果没有变量:351100内容则351100移除。
```墨香中文编程 
231000子程序名返回值类型异步公开备注8|10|4|4|6|121|2|3|4|5-6
230100事件名称事件备注
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000参数名称文本型我是参数备注
351100变量名类型备用备注8|6|4|161|2|3|4
350000局部名称数值型我是局部变量备注
调试输出(参数)

```
####挂接事件代码案例:
```墨香中文编程 
231000子程序名返回值类型异步公开备注12|10|4|4|6|101|2|3|4|5-6
230100事件上传成功上传成功回调事件
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000response通用型
调试输出("上传成功！响应数据：", response)
数据.上传文件列表 = 数据.上传文件列表 + response.fileList

231000子程序名返回值类型异步公开备注12|10|4|4|6|101|2|3|4|5-6
230100事件上传失败上传失败回调事件
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000errorInfo通用型
调试输出("上传失败！错误信息：", errorInfo)

```
##严格遵守标准 任何事件括号中的参数必须同一行，禁止换行，例如:
ELM_上传_创建()的所有 23 个参数必须在同一行内填写，中间用英文逗号分隔，禁止换行
