##中文库名称:流程操作库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|if(%s){|!!如果()||面向过程|if 条件判断|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||``| `文本型` | ``| 例如:a == 1 |
|}|""如果结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|}
else
{|##否则()||面向过程|else 必须在如果语句中使用否则异常|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|}
else if(%s)
{|#*否则如果()||面向过程|else if 在如果中使用，基于多次判断|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|##否则()|``| `文本型` | ``| 用于判断条件是否成立的语句 相等必须为 == |
|return(%s)|返回(0)|通用型|面向过程|返回当前任何对象或者数组|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|#*否则如果()|`0`| `通用型` | `0`| 允许返回任何内容 |
|while(%s){|!!判断循环首()||面向过程|while 当满足条件时候退出 如果不退出将永远循环可能导致程序崩溃|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|返回(0)|``| `文本型` | ``| 例如 i == 0 |
|}|""判断循环首结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|continue;|到循环尾()||面向过程|continue 在数组循环，计次循环中使用，可以跳过后面的代码逻辑到下一次循环|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|break|跳出循环()||面向过程|break 跳出循环 在计次循环，数组循环中使用|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

| for (let j001 = 0; j001 < %s; j001++){|!!计次循环首(10,i)||面向过程|for 循环指定次数|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|跳出循环()|`10`| `数值型` | `10`| 要循环的次数 ||跳出循环()|`i`| `数值型` | `i`| 计次的变量 |
|}|""计次循环首结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|console.log(%s)|调试输出()||面向过程|支持连续输出多参数|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""计次循环首结束()|``| `` | ``| 要输出的内容，如果在服务端中尽量输出文本 |
|

|!!时钟创建(,1000)||面向过程|创建一个循环执行的时钟|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|调试输出()|``| `时钟对象` | ``| 预先申明一个时钟指针对象 ||调试输出()|`1000`| `数值型` | `1000`| 毫秒 |
|
|""时钟创建结束()||面向过程|时钟创建设定间隔时间位置|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|clearInterval(%s)|时钟销毁()||面向过程|销毁运行的时钟。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""时钟创建结束()|``| `时钟对象` | ``| 时钟的对象 |
|structuredClone(%s)|拷贝对象Ex()|对象型|面向过程|ES2024新标准版本的深度拷贝，如果无效请用老版本 拷贝对象|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|时钟销毁()|``| `对象型` | ``|  |
|JSON.parse(JSON.stringify(%s))|拷贝对象()|对象型|面向过程|深度拷贝对象，修改后面对象，前面对象不会跟着改变。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|拷贝对象Ex()|``| `对象型` | ``| 要拷贝的对象 |
|Object.assign(%s, %s);|拷贝对象浅({},)|对象型|面向过程|注，新对象仍旧索引源数据|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|拷贝对象()|`{}`| `对象型` | `{}`| 如果填写了变量，则为更新数据 ||拷贝对象()|``| `对象型` | ``| 例如:...数据  注意:变量前面有...  |
|{%s,%s}|合并对象(,)|对象型|面向过程|合并成一个新的对象  a={ a: 1 }，b={ b: 2 } 目标现在是 {a: 1, b: 2}|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|拷贝对象浅({},)|``| `对象型` | ``| ...对象1   注:参数前有3个. ||拷贝对象浅({},)|``| `对象型` | ``| ...对象2   注:参数前有3个. |
### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

##使用说明:

当命令有 ""开头 则最后有 !! 命令形成闭环，闭环中不允许将`响应数据ref`和`事件接口`部分写到这里。

```墨香中文编程 
!!ELM_滑块_创建(参数一,参数二,参数三)
//这里是其他组件插槽
""ELM_滑块_创建结束
```
###代码规则
####在代码下一行添加注释 例如://这是注释内容，这一行可以换成真实注释。
#### 禁止方法`ELM_上传_创建()`的参数换行!
###代码使用案例
```墨香中文编程 
!!ELM_上传_创建('http://api.example.com/upload', #ELM_上传_请求方法_POST, 数据.请求头, 数据.上传文件列表, 假, 假, 数据.上传字段名, 假, true, , , &事件上传成功, &事件上传失败, , , , 1, 真, 真, 'image/*', , , #ELM_上传_列表类型_PICTURE_CARD, '', 数据.上传样式, 当前.名称)

""ELM_上传_创建结束()
```
##规则二
###如果命令中例如：ELM_xx()，命令前面并没有开头则表示普通方法命令，不需要结束语句闭环。
###普通方法参数也必须在一行不允许换行，例如:

```墨香中文编程 
ELM_按钮_创建('','',false,false,false,false,false,false,'button','','', ,'','墨香中文编程')
```

##响应数据ref
输出在单独代码框

###ref绑定数据在**VUE模板**中:所有成员都放在 `数据` 对象上
```墨香中文编程 
351100变量名类型备用备注8|11|4|341|2|3|4
350000数据VUE数据用于当前全局可以操作的动态响应数据
数据.滑块值=1
数据 = VUE_创建响应数据(数据)
```
####响应案例:
```墨香中文编程 
351100变量名类型备用备注8|11|4|341|2|3|4
350000数据VUE数据用于当前全局可以操作的动态响应数据
350000上传样式CSS样式对象
 // 响应式对象 - 变化会被 Vue 追踪
数据.名称 = '上传图片'
数据.测试 = '点击它可以出现一个新按钮'
数据.可视 = 假
数据.图标 = '<Edit />'
数据.上传字段名 = 'file'

数据.上传地址 = 'http://api.example.com/upload'
数据.上传文件列表 = []
数据.请求头 = {}
 // 设置上传样式
上传样式.width = "300px"
 // ...其他样式
数据.上传样式 = 上传样式
 // 如果需要动态响应数据，则需要通过以下命令转换。
数据 = VUE_创建响应数据(数据)

```


##事件接口
输出在单独代码框

###挂接事件: 以下是一个事件的完整代码 `xx名称` 部分才是可修改部分 
231000,241100,351100这三行均为代码格式固定不允许修改。 如果没有参数:240000内容则241100移除。 如果没有变量:351100内容则351100移除。
```墨香中文编程 
231000子程序名返回值类型异步公开备注8|10|4|4|6|121|2|3|4|5-6
230100事件名称事件备注
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000参数名称文本型我是参数备注
351100变量名类型备用备注8|6|4|161|2|3|4
350000局部名称数值型我是局部变量备注
调试输出(参数)

```
####挂接事件代码案例:
```墨香中文编程 
231000子程序名返回值类型异步公开备注12|10|4|4|6|101|2|3|4|5-6
230100事件上传成功上传成功回调事件
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000response通用型
调试输出("上传成功！响应数据：", response)
数据.上传文件列表 = 数据.上传文件列表 + response.fileList

231000子程序名返回值类型异步公开备注12|10|4|4|6|101|2|3|4|5-6
230100事件上传失败上传失败回调事件
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000errorInfo通用型
调试输出("上传失败！错误信息：", errorInfo)

```
##严格遵守标准 任何事件括号中的参数必须同一行，禁止换行，例如:
ELM_上传_创建()的所有 23 个参数必须在同一行内填写，中间用英文逗号分隔，禁止换行
