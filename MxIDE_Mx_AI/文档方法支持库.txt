##中文库名称:文档方法支持库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|%s.getElementById(%s)|文档_通过ID获取元素(document,)|DOM元素|面向过程|通过元素的ID获取DOM元素|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||`document`| `DOM元素` | `document`| 查找范围限定的目标元素，默认为document对象 |||``| `文本型` | ``| 目标元素的ID |
|%s.getElementsByTagName(%s)|文档_通过标签名获取元素集合(document,)|HTMLCollection|面向过程|通过标签名获取一组DOM元素|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_通过ID获取元素(document,)|`document`| `DOM元素` | `document`| 查找范围限定的目标元素，默认为document对象 ||文档_通过ID获取元素(document,)|``| `文本型` | ``| 目标元素的标签名，如'div'、'p'等 |
|%s.getElementsByClassName(%s)|文档_通过类名获取元素集合(document,)|HTMLCollection|面向过程|通过类名获取一组DOM元素|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_通过标签名获取元素集合(document,)|`document`| `DOM元素` | `document`| 查找范围限定的目标元素，默认为document对象 ||文档_通过标签名获取元素集合(document,)|``| `文本型` | ``| 目标元素的类名 |
|%s.querySelector(%s)|文档_通过选择器获取首个元素(document,)|DOM元素|面向过程|通过CSS选择器获取匹配的第一个DOM元素|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_通过类名获取元素集合(document,)|`document`| `DOM元素` | `document`| 查找范围限定的目标元素，默认为document对象 ||文档_通过类名获取元素集合(document,)|``| `文本型` | ``| 有效的CSS选择器，如'p.myParagraph'、'#myId' |
|%s.querySelectorAll(%s)|文档_通过选择器获取所有元素(document,)|NodeList|面向过程|通过CSS选择器获取匹配的所有DOM元素|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_通过选择器获取首个元素(document,)|`document`| `DOM元素` | `document`| 查找范围限定的目标元素，默认为document对象 ||文档_通过选择器获取首个元素(document,)|``| `文本型` | ``| 有效的CSS选择器，如'li'、'div.container' |
|document.createElement(%s)|文档_创建元素()|DOM元素|面向过程|创建一个新的DOM元素|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_通过选择器获取所有元素(document,)|``| `文本型` | ``| 要创建元素的标签名，如'div'、'span'等 |
|document.createTextNode(%s)|文档_创建文本节点()|文本节点|面向过程|创建一个新的文本节点|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_创建元素()|``| `文本型` | ``| 新文本节点的内容 |
|%s.appendChild(%s)|文档_添加子节点(,)|被添加的节点|面向过程|将一个节点添加到另一个节点的子节点列表的末尾|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_创建文本节点()|``| `DOM元素` | ``| 目标父节点 ||文档_创建文本节点()|``| `DOM元素或文本节点` | ``| 要添加的子节点 |
|%s.removeChild(%s)|文档_移除子节点(,)|被删除的节点|面向过程|从DOM树中删除指定的子节点|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_添加子节点(,)|``| `DOM元素` | ``| 目标父节点 ||文档_添加子节点(,)|``| `DOM元素` | ``| 要删除的子节点 |
|%s.replaceChild(%s, %s)|文档_替换子节点(,,)|被替换的节点|面向过程|用新节点替换旧节点|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_移除子节点(,)|``| `DOM元素` | ``| 目标父节点 ||文档_移除子节点(,)|``| `DOM元素` | ``| 用于替换的新节点 ||文档_移除子节点(,)|``| `DOM元素` | ``| 要被替换的旧节点 |
|%s.insertBefore(%s, %s)|文档_在指定位置插入节点(,,)|被插入的节点|面向过程|在指定的子节点之前插入新节点|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_替换子节点(,,)|``| `DOM元素` | ``| 目标父节点 ||文档_替换子节点(,,)|``| `DOM元素` | ``| 要插入的新节点 ||文档_替换子节点(,,)|``| `DOM元素` | ``| 在该子节点之前插入新节点 |
|%s.hasChildNodes()|文档_检查是否有子节点()|逻辑型|面向过程|检查节点是否有子节点|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_在指定位置插入节点(,,)|``| `DOM元素` | ``| 要检查的节点 |
|%s.getAttribute(%s)|文档_获取元素属性值(,)|文本型|面向过程|获取元素的指定属性值|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_检查是否有子节点()|``| `DOM元素` | ``| 目标元素 ||文档_检查是否有子节点()|``| `文本型` | ``| 要获取的属性名称 |
|%s.setAttribute(%s, %s)|文档_设置元素属性值(,,)||面向过程|设置元素的指定属性值|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_获取元素属性值(,)|``| `DOM元素` | ``| 目标元素 ||文档_获取元素属性值(,)|``| `文本型` | ``| 要设置的属性名称 ||文档_获取元素属性值(,)|``| `文本型` | ``| 属性要设置的值 |
|%s.removeAttribute(%s)|文档_移除元素属性(,)||面向过程|移除元素的指定属性|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_设置元素属性值(,,)|``| `DOM元素` | ``| 目标元素 ||文档_设置元素属性值(,,)|``| `文本型` | ``| 要移除的属性名称 |
|%s.addEventListener(%s, %s, %s)|文档_添加事件监听器(,,,假)||面向过程|为元素添加事件监听器|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_移除元素属性(,)|``| `DOM元素` | ``| 目标元素 ||文档_移除元素属性(,)|``| `文本型` | ``| 事件类型，如'click'、'mouseover'等 ||文档_移除元素属性(,)|``| `函数指针` | ``| 处理事件的函数 ||文档_移除元素属性(,)|`假`| `逻辑型` | `假`| 是否在捕获阶段触发，默认为false |
|%s.removeEventListener(%s, %s, %s)|文档_移除事件监听器(,,,假)||面向过程|移除元素的事件监听器|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_添加事件监听器(,,,假)|``| `DOM元素` | ``| 目标元素 ||文档_添加事件监听器(,,,假)|``| `文本型` | ``| 事件类型，如'click'、'mouseover'等 ||文档_添加事件监听器(,,,假)|``| `函数指针` | ``| 要移除的处理事件的函数 ||文档_添加事件监听器(,,,假)|`假`| `逻辑型` | `假`| 是否在捕获阶段触发，默认为false |
|document.write(%s)|文档_写入内容()||面向过程|向文档写入内容（会覆盖原有内容）|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_移除事件监听器(,,,假)|``| `文本型` | ``| 要写入文档的内容 |
|document.writeln(%s)|文档_写入内容并换行()||面向过程|向文档写入内容并换行（会覆盖原有内容）|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_写入内容()|``| `文本型` | ``| 要写入文档并换行的内容 |
|document.createDocumentFragment()|文档_创建文档片段()|文档片段|面向过程|创建一个文档片段|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|%s.style.setProperty(%s, %s)|文档_设置自定义属性(document,,)||面向过程|假设用于设置文档的某个自定义全局属性|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_创建文档片段()|`document`| `DOM元素` | `document`| 目标元素，默认为document对象 ||文档_创建文档片段()|``| `文本型` | ``| 要设置的自定义属性名称 ||文档_创建文档片段()|``| `文本型` | ``| 自定义属性要设置的值 |
### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

##使用说明:

当命令有 ""开头 则最后有 !! 命令形成闭环，闭环中不允许将`响应数据ref`和`事件接口`部分写到这里。

```墨香中文编程 
!!ELM_滑块_创建(参数一,参数二,参数三)
//这里是其他组件插槽
""ELM_滑块_创建结束
```
###代码规则
####在代码下一行添加注释 例如://这是注释内容，这一行可以换成真实注释。
#### 禁止方法`ELM_上传_创建()`的参数换行!
###代码使用案例
```墨香中文编程 
!!ELM_上传_创建('http://api.example.com/upload', #ELM_上传_请求方法_POST, 数据.请求头, 数据.上传文件列表, 假, 假, 数据.上传字段名, 假, true, , , &事件上传成功, &事件上传失败, , , , 1, 真, 真, 'image/*', , , #ELM_上传_列表类型_PICTURE_CARD, '', 数据.上传样式, 当前.名称)

""ELM_上传_创建结束()
```
##规则二
###如果命令中例如：ELM_xx()，命令前面并没有开头则表示普通方法命令，不需要结束语句闭环。
###普通方法参数也必须在一行不允许换行，例如:

```墨香中文编程 
ELM_按钮_创建('','',false,false,false,false,false,false,'button','','', ,'','墨香中文编程')
```

##响应数据ref
输出在单独代码框

###ref绑定数据在**VUE模板**中:所有成员都放在 `数据` 对象上
```墨香中文编程 
351100变量名类型备用备注8|11|4|341|2|3|4
350000数据VUE数据用于当前全局可以操作的动态响应数据
数据.滑块值=1
数据 = VUE_创建响应数据(数据)
```
####响应案例:
```墨香中文编程 
351100变量名类型备用备注8|11|4|341|2|3|4
350000数据VUE数据用于当前全局可以操作的动态响应数据
350000上传样式CSS样式对象
 // 响应式对象 - 变化会被 Vue 追踪
数据.名称 = '上传图片'
数据.测试 = '点击它可以出现一个新按钮'
数据.可视 = 假
数据.图标 = '<Edit />'
数据.上传字段名 = 'file'

数据.上传地址 = 'http://api.example.com/upload'
数据.上传文件列表 = []
数据.请求头 = {}
 // 设置上传样式
上传样式.width = "300px"
 // ...其他样式
数据.上传样式 = 上传样式
 // 如果需要动态响应数据，则需要通过以下命令转换。
数据 = VUE_创建响应数据(数据)

```


##事件接口
输出在单独代码框

###挂接事件: 以下是一个事件的完整代码 `xx名称` 部分才是可修改部分 
231000,241100,351100这三行均为代码格式固定不允许修改。 如果没有参数:240000内容则241100移除。 如果没有变量:351100内容则351100移除。
```墨香中文编程 
231000子程序名返回值类型异步公开备注8|10|4|4|6|121|2|3|4|5-6
230100事件名称事件备注
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000参数名称文本型我是参数备注
351100变量名类型备用备注8|6|4|161|2|3|4
350000局部名称数值型我是局部变量备注
调试输出(参数)

```
####挂接事件代码案例:
```墨香中文编程 
231000子程序名返回值类型异步公开备注12|10|4|4|6|101|2|3|4|5-6
230100事件上传成功上传成功回调事件
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000response通用型
调试输出("上传成功！响应数据：", response)
数据.上传文件列表 = 数据.上传文件列表 + response.fileList

231000子程序名返回值类型异步公开备注12|10|4|4|6|101|2|3|4|5-6
230100事件上传失败上传失败回调事件
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000errorInfo通用型
调试输出("上传失败！错误信息：", errorInfo)

```
##严格遵守标准 任何事件括号中的参数必须同一行，禁止换行，例如:
ELM_上传_创建()的所有 23 个参数必须在同一行内填写，中间用英文逗号分隔，禁止换行
