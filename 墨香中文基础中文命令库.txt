##中文库名称:CSS样式组件

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|width|布局_宽度()|文本型|CSS样式对象|设置元素宽度，例如: "200px"，默认值: auto|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|height|布局_高度()|文本型|CSS样式对象|设置元素高度，例如: "300px"，默认值: auto|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|maxWidth|布局_最大宽度()|文本型|CSS样式对象|设置元素最大宽度，例如: "500px"，默认值: none|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|maxHeight|布局_最大高度()|文本型|CSS样式对象|设置元素最大高度，例如: "600px"，默认值: none|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|minWidth|布局_最小宽度()|文本型|CSS样式对象|设置元素最小宽度，例如: "100px"，默认值: 0|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|minHeight|布局_最小高度()|文本型|CSS样式对象|设置元素最小高度，例如: "150px"，默认值: 0|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|float|布局_浮动()|文本型|CSS样式对象|设置元素浮动方式，例如: "left"，默认值: none|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|clear|布局_清除浮动()|文本型|CSS样式对象|设置清除浮动方式，例如: "both"，默认值: none|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|display|布局_显示方式()|文本型|CSS样式对象|设置元素显示方式，例如: "block","flex"，默认值: inline|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|visibility|布局_可见性()|文本型|CSS样式对象|设置元素可见性，例如: "hidden"，默认值: visible|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|position|布局_定位方式()|文本型|CSS样式对象|设置元素定位方式，例如: "relative"，默认值: static|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|left|布局_左偏移()|文本型|CSS样式对象|设置元素左偏移量，例如: "20px"，默认值: auto|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|right|布局_右偏移()|文本型|CSS样式对象|设置元素右偏移量，例如: "30px"，默认值: auto|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|top|布局_上偏移()|文本型|CSS样式对象|设置元素上偏移量，例如: "15px"，默认值: auto|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|bottom|布局_下偏移()|文本型|CSS样式对象|设置元素下偏移量，例如: "25px"，默认值: auto|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|zIndex|布局_层叠顺序()|数值型|CSS样式对象|设置元素层叠顺序，例如: 1，默认值: auto|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|overflow|布局_溢出处理()|文本型|CSS样式对象|设置元素溢出处理方式，例如: "scroll"，默认值: visible|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|verticalAlign|布局_垂直对齐()|文本型|CSS样式对象|设置元素垂直对齐方式，例如: "middle"，默认值: baseline|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|color|文字_文字颜色()|文本型|CSS样式对象|设置文字颜色，例如: "red"，默认值: black|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|fontSize|文字_文字大小()|文本型|CSS样式对象|设置文字大小，例如: "16px"，默认值: 16px|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|fontStyle|文字_字体样式()|文本型|CSS样式对象|设置字体样式，例如: "italic"，默认值: normal|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|fontWeight|文字_字体粗细()|文本型|CSS样式对象|设置字体粗细，例如: "bold"，默认值: normal|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|fontFamily|文字_字体族()|文本型|CSS样式对象|设置字体族，例如: "Arial"，默认值: 取决于浏览器|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|textAlign|文字_文字对齐()|文本型|CSS样式对象|设置文字对齐方式，例如: "center"，默认值: left|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|lineHeight|文字_行高()|文本型|CSS样式对象|设置行高，例如: "1.5"，默认值: normal|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|textDecoration|文字_文本装饰()|文本型|CSS样式对象|设置文本装饰，例如: "underline"，默认值: none|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|textIndent|文字_文本缩进()|文本型|CSS样式对象|设置文本缩进量，例如: "2em"，默认值: 0|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|letterSpacing|文字_字母间距()|文本型|CSS样式对象|设置字母间距，例如: "2px"，默认值: normal|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|wordSpacing|文字_单词间距()|文本型|CSS样式对象|设置单词间距，例如: "3px"，默认值: normal|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|textTransform|文字_文本转换()|文本型|CSS样式对象|设置文本转换方式，例如: "uppercase"，默认值: none|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|marginTop|边距_外边距上()|文本型|CSS样式对象|设置元素上外边距，例如: "10px"，默认值: 0|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|marginRight|边距_外边距右()|文本型|CSS样式对象|设置元素右外边距，例如: "15px"，默认值: 0|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|marginBottom|边距_外边距下()|文本型|CSS样式对象|设置元素下外边距，例如: "20px"，默认值: 0|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|marginLeft|边距_外边距左()|文本型|CSS样式对象|设置元素左外边距，例如: "25px"，默认值: 0|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|paddingTop|边距_内边距上()|文本型|CSS样式对象|设置元素上内边距，例如: "5px"，默认值: 0|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|paddingRight|边距_内边距右()|文本型|CSS样式对象|设置元素右内边距，例如: "8px"，默认值: 0|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|paddingBottom|边距_内边距下()|文本型|CSS样式对象|设置元素下内边距，例如: "12px"，默认值: 0|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|paddingLeft|边距_内边距左()|文本型|CSS样式对象|设置元素左内边距，例如: "18px"，默认值: 0|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|padding|边距_边距设定()|文本型|CSS样式对象|设置内容到边距的上下左右距离例如:"2px 8px"，默认值: 0px|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|borderRadius|边距_圆角样式()|文本型|CSS样式对象|设置圆角样式 例如:"40px"，默认值: 0px|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|backgroundColor|背景_背景颜色()|文本型|CSS样式对象|设置背景颜色，例如: "blue"，默认值: transparent|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|backgroundImage|背景_背景图片()|文本型|CSS样式对象|设置背景图片，例如: "url('image.jpg')"，默认值: none|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|backgroundRepeat|背景_背景重复()|文本型|CSS样式对象|设置背景图片重复方式，例如: "no_repeat"，默认值: repeat|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|backgroundPosition|背景_背景位置()|文本型|CSS样式对象|设置背景图片位置，例如: "center"，默认值: 0% 0%|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|backgroundSize|背景_背景大小()|文本型|CSS样式对象|设置背景图片大小，例如: "cover"，默认值: auto|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|backgroundAttachment|背景_背景附着()|文本型|CSS样式对象|设置背景附着方式，例如: "fixed"，默认值: scroll|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|borderWidth|边框_边框宽度()|文本型|CSS样式对象|设置边框宽度，例如: "2px"，默认值: medium|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|borderStyle|边框_边框样式()|文本型|CSS样式对象|设置边框样式，例如: "solid"，默认值: none|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|borderColor|边框_边框颜色()|文本型|CSS样式对象|设置边框颜色，例如: "green"，默认值: currentColor|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|borderCollapse|表格_表格边框合并()|文本型|CSS样式对象|设置表格边框合并方式，例如: "collapse"，默认值: separate|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|borderSpacing|表格_表格单元格间距()|文本型|CSS样式对象|设置表格单元格间距，例如: "2px"，默认值: 2px|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|emptyCells|表格_表格空单元格显示()|文本型|CSS样式对象|设置表格空单元格显示方式，例如: "show"，默认值: show|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|listStyleType|列表_列表样式类型()|文本型|CSS样式对象|设置列表项样式类型，例如: "disc"，默认值: disc|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|listStylePosition|列表_列表样式位置()|文本型|CSS样式对象|设置列表项样式位置，例如: "inside"，默认值: outside|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|listStyleImage|列表_列表样式图片()|文本型|CSS样式对象|设置列表项样式图片，例如: "url('bullet.png')"，默认值: none|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|cursor|其他_光标样式()|文本型|CSS样式对象|设置光标样式，例如: "pointer"，默认值: auto|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|opacity|其他_透明度()|数值型|CSS样式对象|设置元素透明度，例如: 0.5，默认值: 1|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |
| CSS_布局_自动 | `"auto"` | `文本型` | auto |

======上面组件库结束======
##中文库名称:FetchHTTP请求库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|fetch(%s,%s)
  .then(response => {
    if (!response.ok) {
      throw new Error(`HTTP 请求出错，状态码: ${response.status}`);
    }
    return response.text();
  })
  .then(result => {|!!FetchHTTP请求(,)||面向过程|请求通常用于从服务器获取数据|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||``| `文本型` | ``| 要请求的地址 |||``| `Fetch对象` | ``| 一个对象，对象成员请餐卡Fetch对象 |
|})
.catch(error => {
 
});|""FetchHTTP请求结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|method|method()|文本型|Fetch对象|'POST' 或 'GET'|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|headers|headers()|数组型|Fetch对象|请求时候添加的协议头它是一个数组，数组中成员为:{ 'Content-Type': 'application/json'
} 这种其他自行查询资料。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|body|body()|文本型|Fetch对象|请求时候的内容页就是post附带的消息数据。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

======上面组件库结束======
##中文库名称:JSON操作库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|{}|JSON_创建()|JSON对象|面向过程|返回一个JSON对象|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|JSON.stringify(%s)|JSON_到文本()|文本型|面向过程|将对象转换为 JSON 字符串|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|JSON_创建()|``| `对象型` | ``| 任意对象均可转换到文本 |
|JSON.parse(%s)|JSON_到对象()|对象型|面向过程|将 JSON 字符串转换为对象|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|JSON_到文本()|``| `文本型` | ``| 格式必须是JSON：'{"name":"John","age":30}' |
|%s[%s] = %s|JSON_添加键值(,,)||面向过程|设置对象的属性值，注 这是文本键 obj['name'] = "John"|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|JSON_到对象()|``| `对象型` | ``| 一个Json的变量 ||JSON_到对象()|``| `文本型` | ``| 例如 '中国' ||JSON_到对象()|``| `通用型` | ``| 支持任意值 |
|delete %s[%s]|JSON_删除键值(,)||面向过程|删除对象的属性，将Json.name 中的 name删除|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|JSON_添加键值(,,)|``| `文本型` | ``| 当前Json对象 ||JSON_添加键值(,,)|``| `文本型` | ``| 在Json对象中的某个成员 |
|for (let %s in %s) { |!!JSON_遍历(key,)||面向过程|对象的键值对进行遍历。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|JSON_删除键值(,)|`key`| `数值型` | `key`| 键变量， 默认为key ||JSON_删除键值(,)|``| `对象型` | ``| 一个Json变量 |
|}|""JSON_遍历结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|Object.assign(%s, ...%s)|JSON_覆盖(,)||面向过程|将一个或多个对象的属性复制到目标对象（Json）中。如果目标对象中已经存在相同的属性，则会被覆盖。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""JSON_遍历结束()|``| `` | ``| 要保留的 ||""JSON_遍历结束()|``| `` | ``| 用这个对象覆盖Json目标对象 |
|{...%s, ...%s}|JSON_合并(,)|对象型|面向过程|将多个Json中的属性合并成为一个新的JSON对象，一样的属性以后一个为主。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|JSON_覆盖(,)|``| `对象型` | ``| json格式的对象变量 ||JSON_覆盖(,)|``| `对象型` | ``| json格式的对象变量 |
|JSON.parse(JSON.stringify(%s))|JSON_复制()|对象型|面向过程|深拷贝 Json 对象，生成一个全新的对象|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|JSON_合并(,)|``| `对象型` | ``| 一个json对象变量 |
|Object.keys(%s)|JSON_取所有键()|数组型|面向过程|返回 Json 对象的所有属性名组成的数组|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|JSON_复制()|``| `对象型` | ``| 一个Json变量 |
|Object.values(%s)|JSON_取所有值()|数组型|面向过程| 对象的所有属性值组成的数组。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|JSON_取所有键()|``| `对象型` | ``| 一个Json对象变量 |
|hasOwnProperty(%s)|是否包含()|文本型|JSON对象|检查 Json 对象是否包含某个属性|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|JSON_取所有值()|``| `文本型` | ``| json中的某个属性 |
### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

======上面组件库结束======
##中文库名称:VUE_HOOKPlus

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|VueUse.useWindowSize()|Vue_Hook_取窗口大小()|VueHook窗口|面向过程|获取当前整个浏览器窗口大小|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|VueUse.useFps()|Vue_Hook_取帧率()|数值型|面向过程|FPS|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|width|width()|数值型|VueHook窗口|宽度 例如 24|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|height|height()|数值型|VueHook窗口|高度 例如 638|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

======上面组件库结束======
##中文库名称:VUE基础库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
||VUE_创建页面()|VUE对象|面向过程|创建一个VUE页面|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||``| `文本型` | ``| 例如:“/index.html” 编译时候会在目录中生成一个 index.html |
|<template v-for="%s in %s" :key=%s>|!!VUE_计次循环(i,10,"i")||面向过程|在VUE语法中可以对任何VUE组件渲染循环操作。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|VUE_创建页面()|`i`| `数值型` | `i`| 默认: i 每次循环自增+1的变量 例如 循环第五次则为 4 因为从0开始 ||VUE_创建页面()|`10`| `数值型` | `10`| 总循环数量 ||VUE_创建页面()|`"i"`| `文本型` | `"i"`| 在循环中要与变量统一，但这里是文本:"i"  |
|</template>|""VUE_计次循环结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|<template v-for="%s in %s" :key=%s>|!!VUE_数组循环(obj,,index)||面向过程|v-for 数组循环|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""VUE_计次循环结束()|`obj`| `通用型` | `obj`| 每次循环的渲染的 通用对象成员 例如 obj ||""VUE_计次循环结束()|``| `数组型` | ``| 在 数据配置 中的 成员数组对象  ||""VUE_计次循环结束()|`index`| `文本型` | `index`| 数组中的某个唯一值成员，例如id，如果为空则默认 index 用于动态管理。 |
|</template>|""VUE_数组循环结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|<template  v-if="%s">|!!VUE_如果()||面向过程|VUE中的v-if|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""VUE_数组循环结束()|``| `文本型` | ``| 例如:user.level === 'vip' 注：user必须在数据配置中存在。 |
|</template>|""VUE_如果结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|</template>
<template  v-else-if="%s">|#*VUE_否则如果()||面向过程|必须在VUE_如果中使用|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""VUE_如果结束()|``| `文本型` | ``| 参考VUE_如果 |
|</template>
<template  v-else>|##VUE_否则()||面向过程|必须在 VUE_如果 中使用|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|<%s %s %s %s/>|VUE_引用组件(,'','','')||面向过程|可以在组件中继续引用其他组件，但必须先在顶部申明引入那些组件。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|##VUE_否则()|``| `类对象` | ``| 左侧模板系统中的类名 ||##VUE_否则()|`''`| `文本型` | `''`| 如果需要调用该子组件,需要在绑定VUE动态数据 ||##VUE_否则()|`''`| `子程序指针` | `''`| 组件内部触发事件时候，调用 VUE_触发映射事件 即可回调这个页面的子程序 ||##VUE_否则()|`''`| `文档数据` | `''`| 将 文档数据，通过一个绑定数据对象，传递过去。在子组件中可以使用 文档数据 来获取 传递的数据。 |
|<script src=%s %s></script>|VUE_引入全局JS文件(, )||面向过程|注该命令仅推荐再主程序页面使用，顶部即可。使用了defer异步加载|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|VUE_引用组件(,'','','')|``| `文本型` | ``| 例如 "res/file.js" ||VUE_引用组件(,'','','')|` `| `文本型` | ` `| 默认传统加载，推荐方案:"defer" 或 "async" 注:async 属于乱序如果js之间有先后依赖不推荐使用。defer不支持依赖 window.onload否则可能异常。 |
|<script src=%s %s></script>|VUE_引入单页JS文件(, )||面向过程|当前加载仅为当前HTML项目页加载，某些页面需要额外第三方JS，但并不是所有页面需求。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|VUE_引入全局JS文件(, )|``| `文本型` | ``| 例如 "res/file.js" ||VUE_引入全局JS文件(, )|` `| `文本型` | ` `| 默认传统加载，推荐方案:"defer" 或 "async" 注:async 属于乱序如果js之间有先后依赖不推荐使用。defer不支持依赖 window.onload否则可能异常。 |
|<link rel="stylesheet" href=%s>|VUE_引入全局CSS()||面向过程|在主程序页面引入后，所有页面均为加载这个css文件。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|VUE_引入单页JS文件(, )|``| `文本型` | ``| 例如"res/styles.css" |
|<link rel="stylesheet" href=%s>|VUE_引入单页CSS()||面向过程|仅限当前页面被引入这个CSS文件|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|VUE_引入全局CSS()|``| `文本型` | ``| CSS路径文件 |
|Vue.reactive(%s)|VUE_创建响应数据()|数据对象|面向过程|在模板响应数据中使用，可以将对象转为响应数据支持动态双向绑定。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|VUE_引入单页CSS()|``| `对象型` | ``| 一个数据对象 |
|Vue.ref(%s)|VUE_创建响应值(null)|VUE数据|面向过程|创建一个响应值，推荐绑定组件，单值，如果对象请使用 响应数据|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|VUE_创建响应数据()|`null`| `通用型` | `null`| 绑定任何响应数据 |
| <div v-html="%s" :style="%s" :class="%s"></div>|VUE_渲染HTML('','','')||面向过程|v-html 机制，一般用于渲染网页正文代码内容。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|VUE_创建响应值(null)|`''`| `文本型` | `''`| 一般用于动态数据渲染 ||VUE_创建响应值(null)|`''`| `文本型` | `''`| 关联样式 ||VUE_创建响应值(null)|`''`| `文本型` | `''`| 关联类名 |
|emit('映射事件', %s); |VUE_触发映射事件()||面向过程|内置命令，在组件中，通过这个命令，可以触发 VUE_引用组件 中的映射事件|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|VUE_渲染HTML('','','')|``| `通用型` | ``| 要传递的数据 |
|use(%s)|设置(ElementPlus)||VUE对象|设置第三方组件|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|VUE_触发映射事件()|`ElementPlus`| `对象型` | `ElementPlus`| 组件对象，例如默认:ElementPlus  |
||绑定模板()||VUE对象|绑定当前模板,每个页面支持绑定多个从上到下渲染。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|设置(ElementPlus)|``| `类` | ``| 请输入例如: &模板类  |
|mount(%s)|启动('#MXIDE')||VUE对象|将 Vue 应用 HelloVueApp 挂载到 DOM根元素上|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|绑定模板()|`'#MXIDE'`| `文本型` | `'#MXIDE'`| 某个根元素 默认 '#MXIDE' |
### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |
| VUE_ElementPlus | `ElementPlus` | `文本型` | 引入ElementPlus组件 |
| VUE_Vant | `vant` | `文本型` | vant |
| VUE_Vant懒加载 | `vant.Lazyload` | `文本型` | 必须引入该插件后，其他组件才可以调用懒加载功能。 |

======上面组件库结束======
##中文库名称:VUE路由库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|VueRouter.createRouter({history: VueRouter.createWebHashHistory(), routes: []})|VUE_路由创建()|路由对象|面向过程|创建一个VUE路由功能，支持无感刷新页面。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

| <router-view :文档数据="%s"/>|VUE_路由渲染('')||面向过程|渲染路由绑定的页面，会根据当前路由渲染组件。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|VUE_路由创建()|`''`| `文档数据` | `''`| 传递一个动态数据过去 在其他组件页面中可以使用 文档数据 来获取这个数据。 |
|%s.beforeEach((to, from, next) => {|!!VUE_路由监听()||面向过程|路由监听，在组件中即可使用，监听当前路由跳转。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|VUE_路由渲染('')|``| `路由对象` | ``| 传入路由对象。 |
|next()
})|""VUE_路由监听结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|addRoute({path:%s, name: %s, component: %s})|添加(,,)||路由对象|添加路由解析地址|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""VUE_路由监听结束()|``| `文本型` | ``| 例如:"/index.html"  页面绑定的地址 ||""VUE_路由监听结束()|``| `文本型` | ``| 当前路由的别称 例如 "首页" ||""VUE_路由监听结束()|``| `模板页面` | ``| 例如:&主页面 详情参考文档 |
|back()|退回()||路由对象|后退一步|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|next()|前进()||路由对象| 前进一步|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|push(%s);|跳到()||路由对象|跳到指定页面|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|前进()|``| `文本型` | ``| 比如 '/document' |
### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |
| VUE路由_路径 | `this.$route.path` | `文本型` | 当前路由选中路径 |
| VUE路由_名称 | `this.$route.name` | `文本型` | 获取当前路由选中的名称 |
| VUE路由_对象 | `this.$route` | `对象型` | 获取该路由选中对象信息 |

======上面组件库结束======
##中文库名称:Websocket客户端

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
| new WebSocket(%s);
|Websocket连接()|Websokcet对象|面向过程|创建一个websokcet连接对象|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||``| `文本型` | ``| 例如:"ws://127.0.0.1:8888/ws" |
|addEventListener('open', %s)|连接事件()||Websokcet对象|连接成功的事件|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|Websocket连接()|``| `子程序指针` | ``| 传递一个 参数(对象型) |
|addEventListener('message', %s)|消息事件()||Websokcet对象|消息到达|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|连接事件()|``| `子程序指针` | ``| 传递一个参数(对象型)  参数中的 data 为消息数据 |
|addEventListener('close', %s)|断开事件()||Websokcet对象|与服务端断开事件|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|消息事件()|``| `子程序指针` | ``| 传递一个 参数(对象型) |
|send(%s)|发送消息()||Websokcet对象|对服务端发送消息。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|断开事件()|``| `通用型` | ``| 支持任意数据，推荐文本型。 |
|close()|断开连接()||Websokcet对象|主动断开与服务端的连接。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

======上面组件库结束======
##中文库名称:数组操作库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|for(let j001 = 0; j001 < %s.length; j001++){|!!数组_循环(,)||面向过程|支持 返回 跳出循环 到循环尾|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||``| `数组型` | ``| 要遍历的数据 |||``| `文本型` | ``| 输出变量默认 j |
|%s.join(%s)|数组_转换文本(,)|文本型|面向过程|返回一个组合符号的文本|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|!!数组_循环(,)|``| `数组型` | ``| 一个数组 ||!!数组_循环(,)|``| `文本型` | ``| 数组成员连接符号 |
|%s.push(%s)|数组_加入成员末尾(,)|数值型|面向过程|返回数组长度|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_转换文本(,)|``| `数组型` | ``|  ||数组_转换文本(,)|``| `通用型` | ``| 支持多组 使用\\分开 |
|%s.pop()|数组_删除末一项()|对象型|面向过程| 返回移除的一项成员|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_加入成员末尾(,)|``| `数组型` | ``| 我就是参数备注 |
|%s.shift()|数组_删除第一项()|对象型|面向过程|删除原数组第一项，并返回删除元素的值；如果数组为空则返回undefined 。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_删除末一项()|``| `数组型` | ``| 我就是参数备注 |
|%s.unshift(%s)|数组_加入成员开头(,)||面向过程|将当前成员加入到数组的第一个成员位置中|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_删除第一项()|``| `数组型` | ``|  ||数组_删除第一项()|``| `文本型` | ``| 支持多组 使用\\分开 |
|%s.sort()|数组_排序()||面向过程|一维数组排序|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_加入成员开头(,)|``| `数组型` | ``| 我就是参数备注 |
|%s.reverse()|数组_反转顺序()||面向过程|反转数组项的顺序。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_排序()|``| `数组型` | ``|  |
|%s.slice(%s,%s)|数组_取数组范围(,,)|数组型|面向过程|截取数组的返回|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_反转顺序()|``| `数组型` | ``| 我就是参数备注 ||数组_反转顺序()|``| `数值型` | ``| 会计算进去 ||数组_反转顺序()|``| `数值型` | ``| 最后位置不会计算进去 |
|%s.splice(%s,%s)|数组_删除成员(,,)|数组型|面向过程|从数组指定位置删除指定数量的成员|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_取数组范围(,,)|``| `数组型` | ``| 数组对象 ||数组_取数组范围(,,)|``| `数值型` | ``| 要删除的第几项 ||数组_取数组范围(,,)|``| `数值型` | ``| 要删除的数量 |
|%s.splice(%s,%s,%s)|数组_插入成员(,,)||面向过程|对数组指定位置插入一个成员|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_删除成员(,,)|``| `数组型` | ``| 我就是参数备注 ||数组_删除成员(,,)|``| `数值型` | ``| 从哪里插入 ||数组_删除成员(,,)|``| `文本型` | ``| 支持多项用@隔开 |
|%s.splice(%s,%s,%s)|数组_替换成员(,,,)||面向过程|将数组中指定位置的成员进行替换为新的成员|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_插入成员(,,)|``| `数组型` | ``| 我就是参数备注 ||数组_插入成员(,,)|``| `数值型` | ``| 替换的索引位置 ||数组_插入成员(,,)|``| `数值型` | ``| 替换的数量 ||数组_插入成员(,,)|``| `通用型` | ``| 用于替换的成员 可以用 \\ 隔开多个 |
|%s.length|数组_取成员数()|数值型|面向过程|获取当前数组一共有多少个成员|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_替换成员(,,,)|``| `数组型` | ``| 数组变量，从这个数组中获取成员数量 |
|%s.concat(%s)|数组_追加(,)||面向过程|将一个新的数组加入到当前数组中|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_取成员数()|``| `数组型` | ``| 我就是参数备注 ||数组_取成员数()|``| `通用型` | ``| 支持\\多个数组或者 成员 |
|Phaser.Utils.Array.GetRandom(%s)|数组_取随机成员()|对象型|面向过程|这个命令是游戏引擎内部命令|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_追加(,)|``| `数组型` | ``| 数组对象 |
|%s.splice(0,%s.length)|数组_清空(,)||面向过程|清空当前数组 |
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_取随机成员()|``| `数组型` | ``| 数组对象自身 ||数组_取随机成员()|``| `数组型` | ``| 数组对象自身 |
|}|""数组_循环结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|%s = %s.find(function(element, index, arr) {|!!数组_寻找(,)|对象型|面向过程|寻找数组中的某个值 找到后返回这个结果|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""数组_循环结束()|``| `通用型` | ``| 注：这是变量，请必须预先申明 然后传入 ||""数组_循环结束()|``| `数组型` | ``| 数组对象 |
|})|""数组_寻找结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|%s=%s.filter(function(element) {|!!数组_过滤(,)|数组型|面向过程|过滤函数会被传入数组中的每个元素，然后根据函数返回值的真假来决定是否将该元素包含在新数组中。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""数组_寻找结束()|``| `数组型` | ``| 必须预先申明这个变量 传入到这里执行后得到结果 ||""数组_寻找结束()|``| `数组型` | ``| 需要处理的数组 |
|});|""数组_过滤结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|length|成员数()|数值型|数组型|当前数组拥有多少个成员|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

======上面组件库结束======
##中文库名称:文本操作库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|%s.length|文本_取长度()|数值型|面向过程|	返回字符串的长度|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||``| `文本型` | ``| 文本变量 |
|%s.charAt(%s)|文本_取指定位置内容(,1)|文本型|面向过程|返回指定位置的字符 注:仅返回一个字符|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_取长度()|``| `文本型` | ``| 文本变量 ||文本_取长度()|`1`| `数值型` | `1`|  |
|%s.concat(%s)|文本_拼接(,)|文本型|面向过程|连接两个字符 返回新的内容|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_取指定位置内容(,1)|``| `文本型` | ``| 拼接的内容一 ||文本_取指定位置内容(,1)|``| `文本型` | ``| 拼接的内容二 |
|%s.includes(%s)|文本_是否包含(,)|逻辑型|面向过程|检查字符串是否包含指定的子字符串|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_拼接(,)|``| `文本型` | ``| 文本型变量 ||文本_拼接(,)|``| `文本型` | ``| 要被查询的内容 |
|%s.indexOf(%s)|文本_取字符首次位置(,)|数值型|面向过程|返回指定子字符串首次出现的位置|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_是否包含(,)|``| `文本型` | ``| 文本内容 ||文本_是否包含(,)|``| `文本型` | ``| 要检查的字符 |
|%s.indexOf(%s)|文本_取字符最后位置(,)|数值型|面向过程|返回指定子字符串最后一次出现的位置|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_取字符首次位置(,)|``| `文本型` | ``| 文本变量 ||文本_取字符首次位置(,)|``| `文本型` | ``| 要检查的内容 |
|%s.replace(%s, %s)|文本_替换(,,)|文本型|面向过程|替换字符串中的某个子字符串|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_取字符最后位置(,)|``| `文本型` | ``| 文本变量 ||文本_取字符最后位置(,)|``| `文本型` | ``| 要被替换的内容 ||文本_取字符最后位置(,)|``| `文本型` | ``| 替换后的内容 |
|%s.slice(%s, %s)|文本_取内容(,,)|文本型|面向过程|提取字符串的某个部分，并返回新的字符串|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_替换(,,)|``| `文本型` | ``| 文本变量 ||文本_替换(,,)|``| `数值型` | ``| 提取的起始位置（包含） 如果为负数，则表示从末尾开始计算的位置 ||文本_替换(,,)|``| `数值型` | ``| 是提取的结束位置（不包含）如果为负数，则表示从末尾开始计算的位置 |
|%s.split(%s)|文本_分割(,"")|数组型|面向过程|将字符串分割为数组|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_取内容(,,)|``| `文本型` | ``| 文本变量 ||文本_取内容(,,)|`""`| `文本型` | `""`| "" 则为 逐字分割 |
|%s.substring(%s, %s)|文本_取内容Ex(,,)|文本型|面向过程|提取字符串中介于两个指定下标之间的字符 不支持负数|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_分割(,"")|``| `文本型` | ``| 文本型变量 ||文本_分割(,"")|``| `数值型` | ``| 为负数，会被视为 0 ||文本_分割(,"")|``| `数值型` | ``| 不包含该位置的字符 为负数，会被视为 0 大于字符串长度，会被视为字符串长度。 |
|%s.toLowerCase()|文本_到小写()|文本型|面向过程|将字符串转换为小写|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_取内容Ex(,,)|``| `文本型` | ``| 文本内容 |
|%s.toUpperCase()|文本_到大写()|文本型|面向过程|将字符串转换为大写|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_到小写()|``| `文本型` | ``| 文本内容 |
|%s.trim()|文本_删首尾空()|文本型|面向过程|去除字符串两端的空白字符|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_到大写()|``| `文本型` | ``| 文本内容 |
|%s.startsWith(%s)|文本_匹配开头(,)|逻辑型|面向过程|检查字符串是否以指定的子字符串开头|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_删首尾空()|``| `文本型` | ``| 文本内容 ||文本_删首尾空()|``| `数值型` | ``| 匹配长度 |
|%s.endsWith(%s)|文本_匹配结尾(,)|逻辑型|面向过程|检查字符串是否以指定的子字符串结尾|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_匹配开头(,)|``| `文本型` | ``| 文本内容 ||文本_匹配开头(,)|``| `文本型` | ``| 匹配长度 |
|%s.match(%s)|文本_正则匹配(,)|文本型|面向过程|使用正则表达式匹配字符串，并返回匹配结果|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_匹配结尾(,)|``| `文本型` | ``| 文本内容 ||文本_匹配结尾(,)|``| `文本型` | ``| 正则表达式 |
|%s.search(%s)|文本_正则搜索(,)|数值型|面向过程|使用正则表达式搜索字符串，并返回匹配的索引|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_正则匹配(,)|``| `文本型` | ``| 文本内容 ||文本_正则匹配(,)|``| `文本型` | ``| 正则表达式 需要 |
|%s.padStart(%s, %s)|文本_填充左侧(,,)|文本型|面向过程|在字符串开头填充指定字符，直到字符串达到指定长度|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_正则搜索(,)|``| `文本型` | ``| 文本内容 ||文本_正则搜索(,)|``| `数值型` | ``| 文本最终要被填充到的长度比如 5 填充内容为0 长度为 3 则结果是 003 ||文本_正则搜索(,)|``| `文本型` | ``| 要被填充的内容 例如 " "  |
|%s.padEnd(%s, %s)|文本_填充右侧(,,)|文本型|面向过程|在字符串结尾填充指定字符，直到字符串达到指定长度|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_填充左侧(,,)|``| `文本型` | ``| 文本内容 ||文本_填充左侧(,,)|``| `数值型` | ``| 文本将要填充到的长度 例如 文本 5 长度 3 填充 0 结果:500 ||文本_填充左侧(,,)|``| `文本型` | ``| 填充内容 |
|%s.repeat(%s)|文本_填充重复(,)|文本型|面向过程|将字符串重复指定次数|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_填充右侧(,,)|``| `文本型` | ``| 要填充的内容 ||文本_填充右侧(,,)|``| `数值型` | ``| 将填充内容重复次数 |
|%s.charCodeAt(%s)|文本_取Unicode编码(,)|数值型|面向过程|返回指定位置字符的Unicode编码 范围是 0 到 65535|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_填充重复(,)|``| `文本型` | ``| 文本内容 ||文本_填充重复(,)|``| `数值型` | ``| 查询的位置 |
|%s.codePointAt(%s)|文本_取Unicode码点(,)|数值型|面向过程|返回指定位置字符的Unicode码点 这是一个 Unicode 扩展字符，占用两个码元|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文本_取Unicode编码(,)|``| `文本型` | ``| 文本内容 ||文本_取Unicode编码(,)|``| `数值型` | ``| 要查询的位置 |
|length|长度()|数值型|文本型|返回字符串的长度|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|toString()|到文本()|文本型|文本型|将字符串对象转换为字符串|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |
| 换行符 | `"\n"` | `文本型` | \n |

======上面组件库结束======
##中文库名称:文档方法支持库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|%s.getElementById(%s)|文档_通过ID获取元素(document,)|DOM元素|面向过程|通过元素的ID获取DOM元素|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||`document`| `DOM元素` | `document`| 查找范围限定的目标元素，默认为document对象 |||``| `文本型` | ``| 目标元素的ID |
|%s.getElementsByTagName(%s)|文档_通过标签名获取元素集合(document,)|HTMLCollection|面向过程|通过标签名获取一组DOM元素|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_通过ID获取元素(document,)|`document`| `DOM元素` | `document`| 查找范围限定的目标元素，默认为document对象 ||文档_通过ID获取元素(document,)|``| `文本型` | ``| 目标元素的标签名，如'div'、'p'等 |
|%s.getElementsByClassName(%s)|文档_通过类名获取元素集合(document,)|HTMLCollection|面向过程|通过类名获取一组DOM元素|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_通过标签名获取元素集合(document,)|`document`| `DOM元素` | `document`| 查找范围限定的目标元素，默认为document对象 ||文档_通过标签名获取元素集合(document,)|``| `文本型` | ``| 目标元素的类名 |
|%s.querySelector(%s)|文档_通过选择器获取首个元素(document,)|DOM元素|面向过程|通过CSS选择器获取匹配的第一个DOM元素|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_通过类名获取元素集合(document,)|`document`| `DOM元素` | `document`| 查找范围限定的目标元素，默认为document对象 ||文档_通过类名获取元素集合(document,)|``| `文本型` | ``| 有效的CSS选择器，如'p.myParagraph'、'#myId' |
|%s.querySelectorAll(%s)|文档_通过选择器获取所有元素(document,)|NodeList|面向过程|通过CSS选择器获取匹配的所有DOM元素|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_通过选择器获取首个元素(document,)|`document`| `DOM元素` | `document`| 查找范围限定的目标元素，默认为document对象 ||文档_通过选择器获取首个元素(document,)|``| `文本型` | ``| 有效的CSS选择器，如'li'、'div.container' |
|document.createElement(%s)|文档_创建元素()|DOM元素|面向过程|创建一个新的DOM元素|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_通过选择器获取所有元素(document,)|``| `文本型` | ``| 要创建元素的标签名，如'div'、'span'等 |
|document.createTextNode(%s)|文档_创建文本节点()|文本节点|面向过程|创建一个新的文本节点|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_创建元素()|``| `文本型` | ``| 新文本节点的内容 |
|%s.appendChild(%s)|文档_添加子节点(,)|被添加的节点|面向过程|将一个节点添加到另一个节点的子节点列表的末尾|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_创建文本节点()|``| `DOM元素` | ``| 目标父节点 ||文档_创建文本节点()|``| `DOM元素或文本节点` | ``| 要添加的子节点 |
|%s.removeChild(%s)|文档_移除子节点(,)|被删除的节点|面向过程|从DOM树中删除指定的子节点|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_添加子节点(,)|``| `DOM元素` | ``| 目标父节点 ||文档_添加子节点(,)|``| `DOM元素` | ``| 要删除的子节点 |
|%s.replaceChild(%s, %s)|文档_替换子节点(,,)|被替换的节点|面向过程|用新节点替换旧节点|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_移除子节点(,)|``| `DOM元素` | ``| 目标父节点 ||文档_移除子节点(,)|``| `DOM元素` | ``| 用于替换的新节点 ||文档_移除子节点(,)|``| `DOM元素` | ``| 要被替换的旧节点 |
|%s.insertBefore(%s, %s)|文档_在指定位置插入节点(,,)|被插入的节点|面向过程|在指定的子节点之前插入新节点|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_替换子节点(,,)|``| `DOM元素` | ``| 目标父节点 ||文档_替换子节点(,,)|``| `DOM元素` | ``| 要插入的新节点 ||文档_替换子节点(,,)|``| `DOM元素` | ``| 在该子节点之前插入新节点 |
|%s.hasChildNodes()|文档_检查是否有子节点()|逻辑型|面向过程|检查节点是否有子节点|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_在指定位置插入节点(,,)|``| `DOM元素` | ``| 要检查的节点 |
|%s.getAttribute(%s)|文档_获取元素属性值(,)|文本型|面向过程|获取元素的指定属性值|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_检查是否有子节点()|``| `DOM元素` | ``| 目标元素 ||文档_检查是否有子节点()|``| `文本型` | ``| 要获取的属性名称 |
|%s.setAttribute(%s, %s)|文档_设置元素属性值(,,)||面向过程|设置元素的指定属性值|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_获取元素属性值(,)|``| `DOM元素` | ``| 目标元素 ||文档_获取元素属性值(,)|``| `文本型` | ``| 要设置的属性名称 ||文档_获取元素属性值(,)|``| `文本型` | ``| 属性要设置的值 |
|%s.removeAttribute(%s)|文档_移除元素属性(,)||面向过程|移除元素的指定属性|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_设置元素属性值(,,)|``| `DOM元素` | ``| 目标元素 ||文档_设置元素属性值(,,)|``| `文本型` | ``| 要移除的属性名称 |
|%s.addEventListener(%s, %s, %s)|文档_添加事件监听器(,,,假)||面向过程|为元素添加事件监听器|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_移除元素属性(,)|``| `DOM元素` | ``| 目标元素 ||文档_移除元素属性(,)|``| `文本型` | ``| 事件类型，如'click'、'mouseover'等 ||文档_移除元素属性(,)|``| `函数指针` | ``| 处理事件的函数 ||文档_移除元素属性(,)|`假`| `逻辑型` | `假`| 是否在捕获阶段触发，默认为false |
|%s.removeEventListener(%s, %s, %s)|文档_移除事件监听器(,,,假)||面向过程|移除元素的事件监听器|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_添加事件监听器(,,,假)|``| `DOM元素` | ``| 目标元素 ||文档_添加事件监听器(,,,假)|``| `文本型` | ``| 事件类型，如'click'、'mouseover'等 ||文档_添加事件监听器(,,,假)|``| `函数指针` | ``| 要移除的处理事件的函数 ||文档_添加事件监听器(,,,假)|`假`| `逻辑型` | `假`| 是否在捕获阶段触发，默认为false |
|document.write(%s)|文档_写入内容()||面向过程|向文档写入内容（会覆盖原有内容）|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_移除事件监听器(,,,假)|``| `文本型` | ``| 要写入文档的内容 |
|document.writeln(%s)|文档_写入内容并换行()||面向过程|向文档写入内容并换行（会覆盖原有内容）|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_写入内容()|``| `文本型` | ``| 要写入文档并换行的内容 |
|document.createDocumentFragment()|文档_创建文档片段()|文档片段|面向过程|创建一个文档片段|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|%s.style.setProperty(%s, %s)|文档_设置自定义属性(document,,)||面向过程|假设用于设置文档的某个自定义全局属性|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|文档_创建文档片段()|`document`| `DOM元素` | `document`| 目标元素，默认为document对象 ||文档_创建文档片段()|``| `文本型` | ``| 要设置的自定义属性名称 ||文档_创建文档片段()|``| `文本型` | ``| 自定义属性要设置的值 |
### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

======上面组件库结束======
##中文库名称:流程操作库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|if(%s){|!!如果()||面向过程|if 条件判断|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||``| `文本型` | ``| 例如:a == 1 |
|}|""如果结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|}
else
{|##否则()||面向过程|else 必须在如果语句中使用否则异常|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|}
else if(%s)
{|#*否则如果()||面向过程|else if 在如果中使用，基于多次判断|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|##否则()|``| `文本型` | ``| 用于判断条件是否成立的语句 相等必须为 == |
|return(%s)|返回(0)|通用型|面向过程|返回当前任何对象或者数组|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|#*否则如果()|`0`| `通用型` | `0`| 允许返回任何内容 |
|while(%s){|!!判断循环首()||面向过程|while 当满足条件时候退出 如果不退出将永远循环可能导致程序崩溃|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|返回(0)|``| `文本型` | ``| 例如 i == 0 |
|}|""判断循环首结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|continue;|到循环尾()||面向过程|continue 在数组循环，计次循环中使用，可以跳过后面的代码逻辑到下一次循环|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|break|跳出循环()||面向过程|break 跳出循环 在计次循环，数组循环中使用|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

| for (let j001 = 0; j001 < %s; j001++){|!!计次循环首(10,i)||面向过程|for 循环指定次数|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|跳出循环()|`10`| `数值型` | `10`| 要循环的次数 ||跳出循环()|`i`| `数值型` | `i`| 计次的变量 |
|}|""计次循环首结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|console.log(%s)|调试输出()||面向过程|支持连续输出多参数|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""计次循环首结束()|``| `` | ``| 要输出的内容，如果在服务端中尽量输出文本 |
|

|!!时钟创建(,1000)||面向过程|创建一个循环执行的时钟|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|调试输出()|``| `时钟对象` | ``| 预先申明一个时钟指针对象 ||调试输出()|`1000`| `数值型` | `1000`| 毫秒 |
|
|""时钟创建结束()||面向过程|时钟创建设定间隔时间位置|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|clearInterval(%s)|时钟销毁()||面向过程|销毁运行的时钟。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""时钟创建结束()|``| `时钟对象` | ``| 时钟的对象 |
|structuredClone(%s)|拷贝对象Ex()|对象型|面向过程|ES2024新标准版本的深度拷贝，如果无效请用老版本 拷贝对象|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|时钟销毁()|``| `对象型` | ``|  |
|JSON.parse(JSON.stringify(%s))|拷贝对象()|对象型|面向过程|深度拷贝对象，修改后面对象，前面对象不会跟着改变。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|拷贝对象Ex()|``| `对象型` | ``| 要拷贝的对象 |
|Object.assign(%s, %s);|拷贝对象浅({},)|对象型|面向过程|注，新对象仍旧索引源数据|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|拷贝对象()|`{}`| `对象型` | `{}`| 如果填写了变量，则为更新数据 ||拷贝对象()|``| `对象型` | ``| 例如:...数据  注意:变量前面有...  |
|{%s,%s}|合并对象(,)|对象型|面向过程|合并成一个新的对象  a={ a: 1 }，b={ b: 2 } 目标现在是 {a: 1, b: 2}|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|拷贝对象浅({},)|``| `对象型` | ``| ...对象1   注:参数前有3个. ||拷贝对象浅({},)|``| `对象型` | ``| ...对象2   注:参数前有3个. |
### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

======上面组件库结束======
##中文库名称:流程操作库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|if(%s){|!!如果()||面向过程|if 条件判断|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||``| `文本型` | ``| 例如:a == 1 |
|}|""如果结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|}
else
{|##否则()||面向过程|else 必须在如果语句中使用否则异常|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|}
else if(%s)
{|#*否则如果()||面向过程|else if 在如果中使用，基于多次判断|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|##否则()|``| `文本型` | ``| 用于判断条件是否成立的语句 相等必须为 == |
|return(%s)|返回(0)|通用型|面向过程|返回当前任何对象或者数组|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|#*否则如果()|`0`| `通用型` | `0`| 允许返回任何内容 |
|while(%s){|!!判断循环首()||面向过程|while 当满足条件时候退出 如果不退出将永远循环可能导致程序崩溃|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|返回(0)|``| `文本型` | ``| 例如 i == 0 |
|}|""判断循环首结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|continue;|到循环尾()||面向过程|continue 在数组循环，计次循环中使用，可以跳过后面的代码逻辑到下一次循环|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|break|跳出循环()||面向过程|break 跳出循环 在计次循环，数组循环中使用|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

| for (let j001 = 0; j001 < %s; j001++){|!!计次循环首(10,i)||面向过程|for 循环指定次数|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|跳出循环()|`10`| `数值型` | `10`| 要循环的次数 ||跳出循环()|`i`| `数值型` | `i`| 计次的变量 |
|}|""计次循环首结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|console.log(%s)|调试输出()||面向过程|支持连续输出多参数|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""计次循环首结束()|``| `` | ``| 要输出的内容，如果在服务端中尽量输出文本 |
|

|!!时钟创建(,1000)||面向过程|创建一个循环执行的时钟|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|调试输出()|``| `时钟对象` | ``| 预先申明一个时钟指针对象 ||调试输出()|`1000`| `数值型` | `1000`| 毫秒 |
|
|""时钟创建结束()||面向过程|时钟创建设定间隔时间位置|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|clearInterval(%s)|时钟销毁()||面向过程|销毁运行的时钟。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""时钟创建结束()|``| `时钟对象` | ``| 时钟的对象 |
|structuredClone(%s)|拷贝对象Ex()|对象型|面向过程|ES2024新标准版本的深度拷贝，如果无效请用老版本 拷贝对象|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|时钟销毁()|``| `对象型` | ``|  |
|JSON.parse(JSON.stringify(%s))|拷贝对象()|对象型|面向过程|深度拷贝对象，修改后面对象，前面对象不会跟着改变。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|拷贝对象Ex()|``| `对象型` | ``| 要拷贝的对象 |
|Object.assign(%s, %s);|拷贝对象浅({},)|对象型|面向过程|注，新对象仍旧索引源数据|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|拷贝对象()|`{}`| `对象型` | `{}`| 如果填写了变量，则为更新数据 ||拷贝对象()|``| `对象型` | ``| 例如:...数据  注意:变量前面有...  |
|{%s,%s}|合并对象(,)|对象型|面向过程|合并成一个新的对象  a={ a: 1 }，b={ b: 2 } 目标现在是 {a: 1, b: 2}|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|拷贝对象浅({},)|``| `对象型` | ``| ...对象1   注:参数前有3个. ||拷贝对象浅({},)|``| `对象型` | ``| ...对象2   注:参数前有3个. |
### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

======上面组件库结束======
##中文库名称:网络HTTP请求库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|new XMLHttpRequest();|HTTP请求创建()|HTTP请求库|面向过程|返回一个HTTP对象|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|%s.onreadystatechange = function() {|!!HTTP响应事件()||面向过程|通过 HTTP请求创建  返回的对象|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|HTTP请求创建()|``| `HTTP请求库` | ``| 通过 HTTP请求创建  返回的对象 |
|}|""HTTP响应事件结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|open(%s, %s, %s)|打开(,,true)||HTTP请求库|打开请求对象|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""HTTP响应事件结束()|``| `文本型` | ``| 'POST','GET' ||""HTTP响应事件结束()|``| `文本型` | ``| "http://www.55ide.com" ||""HTTP响应事件结束()|`true`| `逻辑型` | `true`| 真，假 |
|send(%s)|发送参数()||HTTP请求库|必须先打开后，设定好参数后再发送|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|打开(,,true)|``| `通用型` | ``| 要对服务器发送的数据 |
|send()|发送()||HTTP请求库|必须打开设定参数后才允许发送|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|setRequestHeader(%s,%s)|设置协议头(,)||HTTP请求库|必须在 打开之后，发送之前去设定才有效|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|发送()|``| `文本型` | ``| 例如:'Cookie' 使用#请求头_ ||发送()|``| `文本型` | ``| 例如:'name=value; name2=value2' |
|readyState|readyState()|文本型|HTTP请求库|当前请求的状态。 值: 0（未初始化）、1（打开）、2（发送）、3（接收）、4（完成）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|responseText|responseText()|文本型|HTTP请求库|返回响应体的文本内容。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|responseXML|responseXML()|文本型|HTTP请求库|返回响应体的 XML 内容（如果响应是 XML 格式）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|status|status()||HTTP请求库|返回 HTTP 响应状态码。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|statusText|statusText()||HTTP请求库|返回 HTTP 响应状态文本。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|timeout|timeout()||HTTP请求库|设置请求的超时时间（毫秒）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|withCredentials|withCredentials()||HTTP请求库|指定是否在跨域请求中包含凭证（如 Cookies）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

======上面组件库结束======
##中文库名称:网页_容器

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|<div :style="%s" ref="%s" :class="%s" @click="%s(%s)"  @mouseenter="%s(%s)"  @mouseleave="%s(%s)">|!!网页容器_创建('','','', , , , , , )||面向过程|对一些内容块可以进行容器布局，注意这是div基础布局功能。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||`''`| `文本型` | `''`| 使用CSS样式对象进行动态布局 |||`''`| `通用型` | `''`| 组件绑定对象 |||`''`| `文本型` | `''`| 容器类名 class |||` `| `子程序指针` | ` `| 鼠标点击事件 |||` `| `通用型` | ` `| 点击事件里面要传递的参数 |||` `| `子程序指针` | ` `| 鼠标进入事件 |||` `| `通用型` | ` `| 可传递进入参数 |||` `| `子程序指针` | ` `| 鼠标离开事件 |||` `| `通用型` | ` `| 可传递离开事件 |
|</div>|""网页容器_创建结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

======上面组件库结束======
##中文库名称:网页标签库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|<a href=%s title=%s target=%s>%s</a>|网页_超链接(,,,)||面向过程|用于创建超链接，点击后跳转到指定URL，target控制是否在新窗口打开|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||``| `文本型` | ``| href |||``| `文本型` | ``| title |||``| `文本型` | ``| target |||``| `文本型` | ``| 链接文本 |
|<img src=%s alt=%s title=%s>|网页_图片(,,)||面向过程|用于插入图片，alt在图片无法显示时提供替代文本，title为鼠标悬停时的提示。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_超链接(,,,)|``| `文本型` | ``| src ||网页_超链接(,,,)|``| `文本型` | ``| alt ||网页_超链接(,,,)|``| `文本型` | ``| title |
|<img src=%s alt=%s title=%s>|网页_列表项(,)||面向过程|用于定义列表中的一项，value仅适用于有序列表，表示该项的编号。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_图片(,,)|``| `数值型` | ``| value ||网页_图片(,,)|``| `数值型` | ``| 列表项内容 |
|<div class=%s id=%s>%s</div>|网页_块级容器(,,)||面向过程|用于创建块级容器，常用于布局或样式控制，class和id用于CSS或JavaScript操作。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_列表项(,)|``| `文本型` | ``| class ||网页_列表项(,)|``| `文本型` | ``| id ||网页_列表项(,)|``| `文本型` | ``| 容器内容 |
|<div class=%s id=%s>%s</div>|网页_行内容器(,,)||面向过程|用于创建行内容器，常用于对文本或行内元素进行样式或脚本操作。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_块级容器(,,)|``| `文本型` | ``| class ||网页_块级容器(,,)|``| `文本型` | ``| id ||网页_块级容器(,,)|``| `文本型` | ``| 容器内容 |
|<input type=%s name=%s value=%s placeholder=%s>|网页_输入框(,,,)||面向过程|用于创建输入框，type决定输入框类型（如文本、密码），placeholder为输入框的占位符文本。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_行内容器(,,)|``| `文本型` | ``| type ||网页_行内容器(,,)|``| `文本型` | ``| name ||网页_行内容器(,,)|``| `文本型` | ``| value ||网页_行内容器(,,)|``| `文本型` | ``| placeholder |
|<form action=%s method=%s target=%s>%s</form>|网页_表单(,,,)||面向过程|用于创建表单，action指定提交的目标URL，method指定提交方式（如get、post）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_输入框(,,,)|``| `对象型` | ``| action ||网页_输入框(,,,)|``| `文本型` | ``| method ||网页_输入框(,,,)|``| `文本型` | ``| target ||网页_输入框(,,,)|``| `文本型` | ``| 表单内容 |
|<button type=%s onclick=%s>%s</button>|网页_按钮(,,)||面向过程|用于创建按钮，type决定按钮类型（如提交、重置），onclick指定点击时执行的JavaScript代码。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_表单(,,,)|``| `文本型` | ``| type ||网页_表单(,,,)|``| `文本型` | ``| onclick ||网页_表单(,,,)|``| `文本型` | ``| 按钮文本 |
|<table border=%s cellpadding=%s cellspacing=%s>%s</table>|网页_表格(,,,)||面向过程|用于创建表格，border控制表格边框宽度，cellpadding和cellspacing控制单元格间距。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_按钮(,,)|``| `数值型` | ``| border ||网页_按钮(,,)|``| `数值型` | ``| cellpadding ||网页_按钮(,,)|``| `数值型` | ``| cellspacing ||网页_按钮(,,)|``| `文本型` | ``| 表格内容 |
|<tr align=%s>%s</tr>|网页_表格行(,)||面向过程|用于定义表格中的一行，align控制行内容的水平对齐方式（如left、center）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_表格(,,,)|``| `文本型` | ``| align ||网页_表格(,,,)|``| `文本型` | ``| 行内容 |
|<td colspan=%s rowspan=%s>%s</td>|网页_表格单元格(,,)||面向过程|用于定义表格中的单元格，colspan和rowspan控制单元格的跨列或跨行数量。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_表格行(,)|``| `数值型` | ``| colspan ||网页_表格行(,)|``| `数值型` | ``| rowspan ||网页_表格行(,)|``| `文本型` | ``| 单元格内容 |
|<th scope=%s>%s</th>|网页_表头单元格(,)||面向过程|用于定义表格的表头单元格，scope指定表头的作用范围（如col、row）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_表格单元格(,,)|``| `文本型` | ``| scope ||网页_表格单元格(,,)|``| `对象型` | ``| 表头内容 |
|<ul type=%s>%s</ul>|网页_无序列表(,)||面向过程|用于创建无序列表，type控制项目符号的类型（如disc、circle）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_表头单元格(,)|``| `文本型` | ``| type ||网页_表头单元格(,)|``| `文本型` | ``| 列表内容 |
|<ol type=%s start=%s>%s</ol>|网页_有序列表(,,)||面向过程|用于创建有序列表，type控制编号类型（如1、A），start指定起始编号。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_无序列表(,)|``| `文本型` | ``| type ||网页_无序列表(,)|``| `文本型` | ``| start ||网页_无序列表(,)|``| `文本型` | ``| 列表内容 |
|<meta name=%s content=%s>|网页_元数据(,)||面向过程|用于定义文档的元数据，如描述、关键词、作者等，常用于SEO优化|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_有序列表(,,)|``| `文本型` | ``| name ||网页_有序列表(,,)|``| `文本型` | ``| content |
|<link rel=%s href=%s>|网页_外部资源(,)||面向过程|用于链接外部资源，如样式表、图标等，rel指定资源与文档的关系（如stylesheet、icon）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_元数据(,)|``| `文本型` | ``| rel ||网页_元数据(,)|``| `文本型` | ``| href |
|<link rel=%s href=%s>|网页_样式表(,)||面向过程|用于链接外部资源，如样式表、图标等，rel指定资源与文档的关系（如stylesheet、icon）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_外部资源(,)|``| `` | ``| type ||网页_外部资源(,)|``| `` | ``| 样式内容 |
|<script src=%s type=%s>%s</script>|网页_脚本(,,)||面向过程|用于插入JavaScript脚本，src指定外部脚本文件，type通常为text/javascript。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_样式表(,)|``| `文本型` | ``| src ||网页_样式表(,)|``| `文本型` | ``| type ||网页_样式表(,)|``| `文本型` | ``| 脚本内容 |
|<p>%s</p>|网页_段落()||面向过程|用于定义段落，段落之间会自动换行并留有空白。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_脚本(,,)|``| `文本型` | ``| 段落内容 |
|<h1>%s</h1>|网页_标题1()||面向过程|用于定义标题，h1是最高级标题，h6是最低级标题，标题会自动加粗并换行。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_段落()|``| `文本型` | ``| 标题内容 |
|<h2>%s</h2>|网页_标题2()||面向过程|用于定义标题，h1是最高级标题，h6是最低级标题，标题会自动加粗并换行。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_标题1()|``| `文本型` | ``| 标题内容 |
|<h3>%s</h3>|网页_标题3()||面向过程|用于定义标题，h1是最高级标题，h6是最低级标题，标题会自动加粗并换行。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_标题2()|``| `文本型` | ``| 标题内容 |
|<h4>%s</h4>|网页_标题4()||面向过程|用于定义标题，h1是最高级标题，h6是最低级标题，标题会自动加粗并换行。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_标题3()|``| `文本型` | ``| 用于定义标题，h1是最高级标题，h6是最低级标题，标题会自动加粗并换行。 |
|<h5>%s</h5>|网页_标题5()||面向过程|用于定义标题，h1是最高级标题，h6是最低级标题，标题会自动加粗并换行。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_标题4()|``| `文本型` | ``| 标题内容 |
|<h6>%s</h6>|网页_标题6()||面向过程|用于定义标题，h1是最高级标题，h6是最低级标题，标题会自动加粗并换行。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_标题5()|``| `文本型` | ``| 标题内容 |
|<strong>%s</strong>|网页_强调文本()||面向过程|用于加粗文本，表示内容的重要性。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_标题6()|``| `文本型` | ``| 强调内容 |
|<em>%s</em>|网页_斜体文字()||面向过程|用于斜体文本，表示内容的强调或特殊意义。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_强调文本()|``| `文本型` | ``| 斜体文本	 |
|<br>|网页_换行()||面向过程|用于在文本中插入换行，不闭合标签|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|<hr>|网页_水平线()||面向过程|用于插入一条水平分割线，不闭合标签。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|<iframe src=%s width=%s height=%s></iframe>|网页_内嵌框架(,,)||面向过程|用于在当前页面嵌入另一个网页或文档，width和height控制内嵌框架的尺寸。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_水平线()|``| `文本型` | ``| src ||网页_水平线()|``| `数值型` | ``| width ||网页_水平线()|``| `数值型` | ``| height |
|<video src=%s controls width=%s height=%s>%s</video>|网页_视频(,,,,)||面向过程|用于嵌入视频，controls显示播放控件，%s为浏览器不支持视频时显示的内容。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_内嵌框架(,,)|``| `文本型` | ``| src ||网页_内嵌框架(,,)|``| `文本型` | ``| controls ||网页_内嵌框架(,,)|``| `数值型` | ``| width ||网页_内嵌框架(,,)|``| `数值型` | ``| height ||网页_内嵌框架(,,)|``| `文本型` | ``| 备用内容 |
|<audio src=%s controls>%s</audio>|网页_音频(,,)||面向过程|用于嵌入音频，controls显示播放控件，%s为浏览器不支持音频时显示的内容。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_视频(,,,,)|``| `文本型` | ``| src ||网页_视频(,,,,)|``| `文本型` | ``| controls ||网页_视频(,,,,)|``| `文本型` | ``| 备用内容 |
|<label for=%s>%s</label>|网页_表单标签(,)||面向过程|用于关联表单元素，点击标签时会聚焦到对应的表单元素。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_音频(,,)|``| `文本型` | ``| 关联的表单元素ID ||网页_音频(,,)|``| `文本型` | ``| 标签文本 |
|<select name=%s>%s</select>|网页_下拉列表(,)||面向过程|用于创建下拉列表，选项用<option>定义。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_表单标签(,)|``| `文本型` | ``| name ||网页_表单标签(,)|``| `文本型` | ``| 选项内容 |
|<option value=%s>%s</option>|网页_下拉选项(,)||面向过程|用于定义下拉列表中的选项，value为提交时的值。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_下拉列表(,)|``| `文本型` | ``| value ||网页_下拉列表(,)|``| `文本型` | ``| 选项文本 |
|<textarea name=%s rows=%s cols=%s>%s</textarea>|网页_多行文本域(,,,)||面向过程|<textarea name=%s rows=%s cols=%s>%s</textarea>|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_下拉选项(,)|``| `文本型` | ``| name ||网页_下拉选项(,)|``| `数值型` | ``| rows ||网页_下拉选项(,)|``| `数值型` | ``| cols ||网页_下拉选项(,)|``| `文本型` | ``| 默认内容 |
|<figure>%s</figure>|网页_插图()||面向过程|用于定义插图或图表，通常与<figcaption>一起使用。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_多行文本域(,,,)|``| `文本型` | ``| 插图内容 |
|<figcaption>%s</figcaption>|网页_插图说明()||面向过程|用于定义插图的说明或标题，通常放在<figure>内。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_插图()|``| `文本型` | ``| 插图说明内容 |
|<aside>%s</aside>|网页_侧边栏()||面向过程|用于定义与主要内容相关的侧边栏内容，如附加信息或广告。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|网页_插图说明()|``| `文本型` | ``| 侧边栏内容 |
### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

======上面组件库结束======
##中文库名称:转换操作库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|String(%s)|到文本()|文本型|面向过程|将变量转换为字符串|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||``| `文本型` | ``|  |
|%s.toString()|到文本Ex()|文本型|面向过程| 将变量转换为字符串（适用于对象和原始值）|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|到文本()|``| `通用型` | ``| 任意变量 |
|Number(%s)|到数值()|数值型|面向过程|将变量转换为数字。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|到文本Ex()|``| `文本型` | ``| 例如："123" 转换到 123 |
|parseInt(%s)|到整数()|整数型|面向过程|将字符串转换为整数。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|到数值()|``| `通用型` | ``| "123.4"  到 123 或 123.5 到 123 |
|parseFloat(%s)|到浮点()|数值型|面向过程|将字符串转换为浮点数。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|到整数()|``| `文本型` | ``| "123.45" 转换为 123.45 |
|Math.abs(%s)|取绝对值()|数值型|面向过程|返回这个数的绝对值|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|到浮点()|``| `数值型` | ``| 例如:-1 结果返回 1 |
|Math.ceil(%s)|取上整数()|整数型|面向过程|返回大于或等于 x 的最小整数（向上取整）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取绝对值()|``| `数值型` | ``| 4.3 返回 5 |
|Math.floor(%s)|取下整数()|整数型|面向过程|返回小于或等于 x 的最大整数（向下取整）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取上整数()|``| `数值型` | ``| 4.7 返回 4 |
|Math.round(%s)|取四舍五入()|数值型|面向过程|返回 x 四舍五入后的整数。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取下整数()|``| `数值型` | ``| 4.5 返回 5 ，4.4 返回 4 |
|Math.trunc(%s)|取整数()|整数型|面向过程|返回 x 的整数部分（去除小数部分）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取四舍五入()|``| `数值型` | ``| 4.9 返回 4 |
|Math.sin(%s)|取正弦值(Math.PI / 2)|数值型|面向过程|Math.sin(x) 返回 x 的正弦值（x 为弧度）|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取整数()|`Math.PI / 2`| `数值型` | `Math.PI / 2`| Math.PI / 2 返回 1 |
|Math.cos(%s)|取余弦值(Math.PI)|数值型|面向过程|Math.cos(x) 返回 x 的余弦值（x 为弧度）|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取正弦值(Math.PI / 2)|`Math.PI`| `数值型` | `Math.PI`| Math.PI 返回 -1 |
|Math.random()|取随机小数()|数值型|面向过程|Math.random() 返回一个 0 到 1 之间的伪随机数（包括 0，不包括 1）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|(function(min, max) {return Math.floor(Math.random() * (max - min + 1)) + min})(%s, %s)|取随机数(1,100)|整数型|面向过程|获取两个数之间的一个随机数值|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取随机小数()|`1`| `整数型` | `1`| 要得到的最小值 ||取随机小数()|`100`| `整数型` | `100`| 要得到的最大值 |
|Math.hypot(%s - %s, %s - %s)|取两点距离(,,,)|数值型|面向过程|使用 Math.hypot 可以方便地计算两点之间的欧几里得距离：|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取随机数(1,100)|``| `数值型` | ``| 对象2的x坐标 ||取随机数(1,100)|``| `数值型` | ``| 对象1的x坐标 ||取随机数(1,100)|``| `数值型` | ``| 对象2的y坐标 ||取随机数(1,100)|``| `数值型` | ``| 对象1的y坐标 |
|Date.now()|取时间戳()|数值型|面向过程|返回13位时间戳|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

======上面组件库结束======

##使用说明:

当命令有 ""开头 则最后有 !! 命令形成闭环，闭环中不允许将`响应数据ref`和`事件接口`部分写到这里。

```墨香中文编程 
!!ELM_滑块_创建(参数一,参数二,参数三)
//这里是其他组件插槽
""ELM_滑块_创建结束
```
###代码规则
####在代码下一行添加注释 例如://这是注释内容，这一行可以换成真实注释。
#### 禁止方法`ELM_上传_创建()`的参数换行!
###代码使用案例
```墨香中文编程 
!!ELM_上传_创建('http://api.example.com/upload', #ELM_上传_请求方法_POST, 数据.请求头, 数据.上传文件列表, 假, 假, 数据.上传字段名, 假, true, , , &事件上传成功, &事件上传失败, , , , 1, 真, 真, 'image/*', , , #ELM_上传_列表类型_PICTURE_CARD, '', 数据.上传样式, 当前.名称)

""ELM_上传_创建结束()
```
##规则二
###如果命令中例如：ELM_xx()，命令前面并没有开头则表示普通方法命令，不需要结束语句闭环。
###普通方法参数也必须在一行不允许换行，例如:

```墨香中文编程 
ELM_按钮_创建('','',false,false,false,false,false,false,'button','','', ,'','墨香中文编程')
```

##响应数据ref
输出在单独代码框

###ref绑定数据在**VUE模板**中:所有成员都放在 `数据` 对象上
```墨香中文编程 
351100变量名类型备用备注8|11|4|341|2|3|4
350000数据VUE数据用于当前全局可以操作的动态响应数据
数据.滑块值=1
数据 = VUE_创建响应数据(数据)
```
####响应案例:
```墨香中文编程 
351100变量名类型备用备注8|11|4|341|2|3|4
350000数据VUE数据用于当前全局可以操作的动态响应数据
350000上传样式CSS样式对象
 // 响应式对象 - 变化会被 Vue 追踪
数据.名称 = '上传图片'
数据.测试 = '点击它可以出现一个新按钮'
数据.可视 = 假
数据.图标 = '<Edit />'
数据.上传字段名 = 'file'

数据.上传地址 = 'http://api.example.com/upload'
数据.上传文件列表 = []
数据.请求头 = {}
 // 设置上传样式
上传样式.width = "300px"
 // ...其他样式
数据.上传样式 = 上传样式
 // 如果需要动态响应数据，则需要通过以下命令转换。
数据 = VUE_创建响应数据(数据)

```


##事件接口
输出在单独代码框

###挂接事件: 以下是一个事件的完整代码 `xx名称` 部分才是可修改部分 
231000,241100,351100这三行均为代码格式固定不允许修改。 如果没有参数:240000内容则241100移除。 如果没有变量:351100内容则351100移除。
```墨香中文编程 
231000子程序名返回值类型异步公开备注8|10|4|4|6|121|2|3|4|5-6
230100事件名称事件备注
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000参数名称文本型我是参数备注
351100变量名类型备用备注8|6|4|161|2|3|4
350000局部名称数值型我是局部变量备注
调试输出(参数)

```
####挂接事件代码案例:
```墨香中文编程 
231000子程序名返回值类型异步公开备注12|10|4|4|6|101|2|3|4|5-6
230100事件上传成功上传成功回调事件
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000response通用型
调试输出("上传成功！响应数据：", response)
数据.上传文件列表 = 数据.上传文件列表 + response.fileList

231000子程序名返回值类型异步公开备注12|10|4|4|6|101|2|3|4|5-6
230100事件上传失败上传失败回调事件
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000errorInfo通用型
调试输出("上传失败！错误信息：", errorInfo)

```
##严格遵守标准 任何事件括号中的参数必须同一行，禁止换行，例如:
ELM_上传_创建()的所有 23 个参数必须在同一行内填写，中间用英文逗号分隔，禁止换行
