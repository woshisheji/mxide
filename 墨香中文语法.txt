## 服务端代码语法规则案例
171000程序集名备注14|391|2-3-4
170100AI代码逻辑调教用于提交给AI让AI能够编写墨香中文格式的代码

231000子程序名返回值类型异步公开备注10|10|4|4|6|111|2|3|4|5-6
230100这是方法名数值型这是备注
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000参数一数值型参数1的备注
240000参数二文本型参数2的备注
351100变量名类型备用备注6|6|4|121|2|3|4
350000变量一文本型变量一的备注
 // 
!!如果(参数一 == 0)
 // 满足如果条件
#*否则如果(参数一 == 1)
 // 满足否则如果条件
##否则
 // 这是否则

""如果结束()
 // 以下是计次循环
!!计次循环首(10, i)
 // 循环内部代码部分

""计次循环首结束()
 // 以下是数组_循环
let 数组_ = [1, 2]
!!数组_循环(数组_, i)
 // 注：与易语言不同的是 数组_从0成员开始
 // 数组_循环内部代码
!!如果(item == 1)
调试输出("1")
#*否则如果(item == 2)
调试输出("2")
##否则
跳出循环()
""如果结束()


""数组_循环结束()

!!数组_循环foreach(数组_)
 // 执行代码item,index,array
 // 参数：item数组_中的当前项, index当前项的索引, array原始数组_；
 // 数组_中有几项，那么传递进去的匿名回调函数就需要执行几次；
!!如果(item == 1)
调试输出("1")
#*否则如果(item == 2)
调试输出("2")
##否则
调试输出("666")
""如果结束()
 // 这个不支持跳出循环
""数组_循环foreach结束()


返回(1)
 // 以上是一款中文编程代码格式，你能理解它吗？它包含子程序，参数，变量，计次循环，数组_循环，返回，跳出等。它还完美支持js

### 队伍子程序案例
231000子程序名返回值类型异步公开备注10|10|4|4|6|261|2|3|4|5-6
230100_队伍_创建没有加入队伍的人可以创建一个队伍
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000ID数值型玩家套接字
351100变量名类型备用备注6|6|4|221|2|3|4
350000index数值型玩家在数组_中的成员位置
 // 先查询玩家
index = 玩家查找(ID)
 // 
!!如果(index ==  - 1)
提示核心(ID, "队伍错误0x001", )
返回(0)
""如果结束()
 // 声明变量类型
let 玩家 = 申明自定义(玩家类)
 // 赋值
玩家 = 数组_玩家[index]
 // 
!!如果(玩家.队伍状态 != 0)
提示核心(ID, "已经在队伍中无法继续创建队伍", )
返回(0)
""如果结束()
 // 新建队伍数组_
let 队伍属性 = 申明自定义(队伍配置)
队伍属性.队伍数组_ = [] // 新建的队伍，配置一个队伍数组_
队伍属性.拾取模式 = 1 // 队长设置拾取方式 1 共享，2 独享经验，3 队长拿70% 
 // 其中队伍数组_里面有对象配置
队伍属性.人员上限 = 5 // 队伍最多5个人
 // 新创建队伍，将第一个位置丢进去，注意成员位置为0的永远是队长
let 队员属性 = 申明自定义(队员配置)
队员属性.成员索引 = index // 这个队员在所有玩家数组_中的成员位置
队员属性.自动跟随 = 假 // 队长没有办法自动跟随其他玩家
 // 加入队伍
数组_加入成员末尾(队伍属性.队伍数组_, 队员属性)
 // 队伍创建完毕，加入系统队伍数组_
数组_加入成员末尾(数组_队伍, 队伍属性)
 // 通知玩家
提示核心(ID, "队伍创建成功", )

231000子程序名返回值类型异步公开备注8|10|4|4|41|2|3|4|5-6
230100__
!!数组_循环(队伍.队伍数组_, i)
 // 注：与易语言不同的是 数组_从0成员开始
!!如果(队伍.队伍数组_[i].成员索引 == 新队长索引)
新队长在队伍中 = 真
跳出循环()
""如果结束()
""数组_循环结束()
