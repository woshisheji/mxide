171000程序集名备注8|41|2-3-4
170100组队服务
 // 组队时候，我们拥有
231000子程序名返回值类型异步公开备注1|2|3|4|5-6
230100队伍_查找数值型通过玩家的ID来找到它所在的队伍
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000ID数值型玩家套接字
351100变量名类型备用备注6|6|4|221|2|3|4
350000index数值型玩家在数组中的成员位置
 // 先查询玩家 其实可以通过创建队伍后，给玩家的索引绑定上队伍位置，这个只是为了让AI理解如何循环、
index = 玩家查找(ID)
 // 
!!如果(index ==  - 1)
 // 提示核心(ID, "队伍错误0x001", )
返回( - 1)
""如果结束()
 // 声明变量类型
let 玩家 = 申明自定义(玩家类)
 // 赋值
玩家 = 数组玩家[index]
 // 循环队伍数组
返回(玩家.队伍索引)


231000子程序名返回值类型异步公开备注1|2|3|4|5-6
230100队伍_创建没有加入队伍的人可以创建一个队伍
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000ID数值型玩家套接字
351100变量名类型备用备注6|6|4|221|2|3|4
350000index数值型玩家在数组中的成员位置
 // 先查询玩家
index = 玩家查找(ID)
 // 
!!如果(index ==  - 1)
提示核心(ID, "队伍错误0x001", )
返回(0)
""如果结束()
 // 声明变量类型
let 玩家 = 申明自定义(玩家类)
 // 赋值
玩家 = 数组玩家[index]
 // 
!!如果(玩家.队伍状态 != 0)
队伍消息推送(ID, "已经在队伍中无法继续创建队伍",  - 1)
返回(0)
""如果结束()
 // 新建队伍数组
let 队伍属性 = 申明自定义(队伍配置)
队伍属性.队伍数组 = [] // 新建的队伍，配置一个队伍数组
队伍属性.拾取模式 = 1 // 队长设置拾取方式 1 共享，2 独享经验，3 队长拿70% 
 // 其中队伍数组里面有对象配置
队伍属性.人员上限 = 5 // 队伍最多5个人
 // 新创建队伍，将第一个位置丢进去，注意成员位置为0的永远是队长
let 队员属性 = 申明自定义(队员配置)
队员属性.成员索引 = index // 这个队员在所有玩家数组中的成员位置
队员属性.自动跟随 = 假 // 队长没有办法自动跟随其他玩家
队员属性.套接字 = ID // 队伍中也记录下这个队员的套接字，方便操作，或者通过成员索引，从数组玩家中找到 .套接字 也可以。
 // 加入队伍
数组加入成员末尾(队伍属性.队伍数组, 队员属性)
 // 队伍创建完毕，加入系统队伍数组
数组加入成员末尾(数组队伍, 队伍属性)
 // 通知玩家
队伍消息推送(ID, "队伍创建成功", 1, {"team": ID, "name": 玩家.属性.名称})
 // 设置这个玩家的队伍属性
玩家.队伍状态 = 1 // 玩家的队伍状态 是否存在队伍 0 没有队伍，1是队长，2是队员
玩家.队伍索引 = 数组队伍.#长度 - 1 // 这个玩家在那个队伍中~ 这是在数组中的成员位置，方便玩家快速找到队伍


231000子程序名返回值类型异步公开备注1|2|3|4|5-6
230100队伍_解散解散当前队伍，只有队长可以解散队伍
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000ID数值型玩家套接字
 // 查找队伍
let 队伍索引 = 队伍_查找(ID)
 // 
!!如果(队伍索引 ==  - 1)
队伍消息推送(ID, "队伍错误0x001：未找到队伍",  - 1)
返回(0)
""如果结束()
let 队伍属性 = 数组队伍[队伍索引]
 // 检查是否是队长
!!如果(队伍属性.队伍数组.#长度 == 0)
队伍消息推送(ID, "队伍错误0x003：队伍没有成员",  - 1)
返回(0)
""如果结束()
!!如果(队伍属性.队伍数组[0].套接字 != ID)
队伍消息推送(ID, "队伍错误0x002：你不是队长，无法解散队伍",  - 1)
返回(0)
""如果结束()
 // 通知所有队员队伍解散
!!数组循环(队伍属性.队伍数组, i)
let 队员属性 = 队伍属性.队伍数组[i]
队伍消息推送(队员属性.套接字, "队伍已解散", 2)
数组玩家[队员属性.成员索引].队伍状态 = 0 // 重置队员状态
 // 还原状态
数组玩家[队员属性.成员索引].队伍索引 =- 1 // 重置队员状态

""数组循环结束()
 // 删除队伍
数组删除成员(数组队伍, 队伍索引, 1)


返回(1)

231000子程序名返回值类型异步公开备注1|2|3|4|5-6
230100队伍_申请申请加入指定队伍
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000ID数值型玩家套接字
240000队伍索引数值型要申请的队伍索引
 // 查找玩家
let index = 玩家查找(ID)
 // 
!!如果(index ==  - 1)
队伍消息推送(ID, "队伍错误0x001：玩家不存在",  - 1)
返回(0)
""如果结束()
let 玩家 = 数组玩家[index]
 // 检查是否已加入队伍
!!如果(玩家.队伍状态 != 0)
队伍消息推送(ID, "队伍错误0x002：你已经在队伍中",  - 1)
返回(0)
""如果结束()
let 队伍属性 = 数组队伍[队伍索引]
 // 检查队伍是否已满
!!如果(队伍属性.队伍数组.长度 >= 队伍属性.人员上限)
队伍消息推送(ID, "队伍错误0x003：队伍已满",  - 1)
返回(0)
""如果结束()
 // 创建队员属性
let 队员属性 = 申明自定义(队员配置)
队员属性.成员索引 = index
队员属性.套接字 = ID
队员属性.自动跟随 = 假
 // 加入队伍
数组加入成员末尾(队伍属性.队伍数组, 队员属性)
 // 更新玩家状态
玩家.队伍状态 = 2
玩家.队伍索引 = 队伍索引
 // 队伍消息推送(ID, "申请加入队伍成功", 1)
队伍消息推送(队伍属性.队伍数组[0].套接字, "有新队员申请加入队伍", 1)
返回(1)

231000子程序名返回值类型异步公开备注1|2|3|4|5-6
230100队伍_踢出队长可以踢出某个队员
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000ID数值型队长套接字
240000队员ID数值型被踢出的队员套接字
 // 查找队伍
let 队伍索引 = 队伍_查找(ID)
 // 
!!如果(队伍索引 ==  - 1)
队伍消息推送(ID, "队伍错误0x001：未找到队伍", )
返回(0)
""如果结束()
let 队伍属性 = 数组队伍[队伍索引]
 // 检查是否是队长
!!如果(队伍属性.队伍数组[0].套接字 != ID)
队伍消息推送(ID, "队伍错误0x002：你不是队长，无法踢出队员", )
返回(0)
""如果结束()
 // 查找队员
let 队员索引 = -1
!!数组循环(队伍属性.队伍数组, i)
!!如果(队伍属性.队伍数组[i].套接字 == 队员ID)
队员索引 = i
跳出循环()
""如果结束()
""数组循环结束()
 // 
!!如果(队员索引 ==  - 1)
队伍消息推送(ID, "队伍错误0x003：未找到该队员", )
返回(0)
""如果结束()
 // 踢出队员
let 队员属性 = 队伍属性.队伍数组[队员索引]
数组删除成员(队伍属性.队伍数组, 队员索引, 1)
数组玩家[队员属性.成员索引].队伍状态 = 0 // 重置队员状态
队伍消息推送(队员属性.套接字, "你已被踢出队伍", )
提示核心(ID, "踢出队员成功", )
返回(1)

231000子程序名返回值类型异步公开备注1|2|3|4|5-6
230100队伍_跟随设置是否自动跟随队长
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000ID数值型玩家套接字
240000跟随状态逻辑型是否自动跟随
 // 查找队伍
let 队伍索引 = 队伍_查找(ID)
 // 
!!如果(队伍索引 ==  - 1)
队伍消息推送(ID, "队伍错误0x001：未找到队伍", )
返回(0)
""如果结束()
let 队伍属性 = 数组队伍[队伍索引]
 // 查找队员
let 队员索引 = -1
!!数组循环(队伍属性.队伍数组, i)
!!如果(队伍属性.队伍数组[i].套接字 == ID)
队员索引 = i
跳出循环()
""如果结束()
""数组循环结束()
 // 
!!如果(队员索引 ==  - 1)
队伍消息推送(ID, "队伍错误0x002：未找到该队员", )
返回(0)
""如果结束()
 // 设置跟随状态
队伍属性.队伍数组[队员索引].自动跟随 = 跟随状态
队伍消息推送(ID, "跟随状态已更新", )
返回(1)


231000子程序名返回值类型异步公开备注1|2|3|4|5-6
230100队伍_转让队长可以将队长权限转让给其他队员
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000ID数值型队长套接字
240000新队长ID数值型新队长的套接字
 // 查找队伍
let 队伍索引 = 队伍_查找(ID)
 // 
!!如果(队伍索引 ==  - 1)
队伍消息推送(ID, "队伍错误0x001：未找到队伍", )
返回(0)
""如果结束()
let 队伍属性 = 数组队伍[队伍索引]
 // 检查是否是队长
!!如果(队伍属性.队伍数组[0].套接字 != ID)
队伍消息推送(ID, "队伍错误0x002：你不是队长，无法转让权限", )
返回(0)
""如果结束()
 // 查找新队长
let 新队长索引 =- 1
!!数组循环(队伍属性.队伍数组, i)
!!如果(队伍属性.队伍数组[i].套接字 == 新队长ID)
新队长索引 = i
跳出循环()
""如果结束()
""数组循环结束()
 // 
!!如果(新队长索引 ==  - 1)
队伍消息推送(ID, "队伍错误0x003：未找到新队长", )
返回(0)
""如果结束()
 // 转让队长权限
let 新队长属性 = 队伍属性.队伍数组[新队长索引]
数组删除成员(队伍属性.队伍数组, 新队长索引, 1)
数组加入成员首位(队伍属性.队伍数组, 新队长属性)
队伍消息推送(ID, "队长权限已转让", )
队伍消息推送(新队长ID, "你已成为队长", )
返回(1)
231000子程序名返回值类型异步公开备注1|2|3|4|5-6
230100队伍_离开队员可以主动离开队伍
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000ID数值型玩家套接字
 // 查找队伍
let 队伍索引 = 队伍_查找(ID)
 // 
!!如果(队伍索引 ==  - 1)
队伍消息推送(ID, "队伍错误0x001：未找到队伍", )
返回(0)
""如果结束()
let 队伍属性 = 数组队伍[队伍索引]
 // 查找队员
let 队员索引 = -1
!!数组循环(队伍属性.队伍数组, i)
!!如果(队伍属性.队伍数组[i].套接字 == ID)
队员索引 = i
跳出循环()
""如果结束()
""数组循环结束()
 // 
!!如果(队员索引 ==  - 1)
队伍消息推送(ID, "队伍错误0x002：未找到该队员", )
返回(0)
""如果结束()
 // 离开队伍
let 队员属性 = 队伍属性.队伍数组[队员索引]
!!如果(队伍属性.队伍数组.#长度 == 1)
队伍消息推送(ID, "仅队长无法离开队伍", )
返回(0)
""如果结束()

数组玩家[队员属性.成员索引].队伍状态 = 0 // 重置队员状态
队伍消息推送(ID, "你已离开队伍", )
提示核心(队伍属性.队伍数组[0].套接字, "有队员离开队伍", )
 // 从队伍删除成员
数组删除成员(队伍属性.队伍数组, 队员索引, 1)

返回(1)
