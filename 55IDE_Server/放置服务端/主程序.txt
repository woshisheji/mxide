171000程序集名备注12|12|4|941|2-3-4
170100子程序小狐狸引擎专用服务端系统
121100变量名类型公开备注1|2|3|4
120000消息序列消息压缩对象
120000数据配置数据库配置用于数据库文件读写配置
120000
120000数组玩家数组型玩家数组管理
120000数组地图数组型
120000数组临时地图数组型创建副本的地图都是临时地图类型为 2
120000
120000数组队伍数组型内存队伍管理，服务端重启后队伍将会销毁
120000数组帮派数组型帮派记录，首次启动服务端时候读取好，后续都通过玩家删除，创建帮派直接修改内存的，同步数据库操作
120000
120000升级表经验表类型用于独立对象判断
120000怪物表怪物配置表基础属性表
120000掉落表掉落表配置怪物死亡掉落规则的表
120000锻造表锻造配置表
120000商城表商城配置表
120000
120000
120000经验倍数数值型游戏全局经验倍数
120000性别数组型
120000系统配置系统配置类型用于基础系统配置
4=1100常量名类型公开初始值备注13|6|4|7|341|2|3|4|5
4=0000魔魂宝石数值型1037141用于检测是否为锻造宝石
4=0000步伐x数值型48
4=0000步伐y数值型32
4=0000位置_装备帽子数值型1
4=0000位置_装备项链数值型2
4=0000位置_装备衣服数值型3
4=0000位置_装备手镯数值型4
4=0000位置_装备鞋子数值型5
4=0000位置_装备武器数值型6
4=0000
4=0000类型宝石数值型20在物品表中 类型: 20 表示宝石
4=0000类型幸运数值型21在物品表中 类型: 21 幸运系列的材料
4=0000
4=0000位置_背包数值型51
4=0000位置_仓库数值型201
4=0000位置_摆摊数值型200
4=0000
4=0000脚本类型_NPC数值型1
4=0000脚本类型_怪物数值型2
4=0000脚本类型_物品数值型3
4=0000脚本类型_玩家数值型4
4=0000
4=0000脚本_成功文本型'0'
4=0000脚本_失败文本型'1'
4=0000
4=0000职业法师数值型1
4=0000职业战士数值型2
4=0000性别男数值型1
4=0000性别女数值型2
4=0000
 // 初始化数据库连接或者玩家操作
服务端初始化(&客户进入, &客户离开, &客户消息, &网页消息)

let Sqlnum = 数据库连接(10, "127.0.0.1", 3306, "root", "haosql", "55IDE", "gbk")

!!如果(Sqlnum ==  - 1 或 Sqlnum == 1)
服务端调试输出("数据库连接失败")
""如果结束()
 // 
消息序列  = 消息序列初始化()
 // 申明配置
数据配置.账号查询 = 0
数据配置.账号添加 = 0


数据配置.角色查找 = 0
数据配置.角色添加 = 0
数据配置.角色插入 = 0 // 跟上面其实一样。只是新增了一个方案。
数据配置.角色名查询 = 0 // 查找角色名是否已经创建
数据配置.装备获取 = 0 // 获取当前角色ID所有装备
数据配置.装备修改 = 0 // 
数据配置.技能获取 = 0 // 获取技能
数据配置.物品插入 = 0 // 添加物品
数据配置.物品删除 = 0 // 删除物品
数据配置.角色修改 = 0 // 修改角色数据
数据配置.玩家排行 = 0 // 玩家等级排行榜
数据配置.加载职业 = 0 // 加载玩家初始选择职业信息
数据配置.加载地图 = 0 // 加载地图信息
数据配置.加载NPC = 0 // 加载NPC
数据配置.加载怪物 = 0 // 加载怪物
数据配置.加载刷怪 = 0 // 加载刷怪
数据配置.加载升级 = 0 // 加载升级表
数据配置.加载掉落 = 0 // 加载掉落表
数据配置.加载物品 = 0 // 加载物品基础表
数据配置.加载附魔 = 0 // 加载附魔表
数据配置.加载商城 = 0 // 加载附魔表
数据配置.加载摊位 = 0 // 加载摊位表
数据配置.加载技能 = 0 // 加载摊位表

 // 
数据配置.变量修改 = 0 // 修改数据库玩家物动态变量
数据配置.变量删除 = 0 // 删除变量
数据配置.变量添加 = 0 // 向数据库添加变量
数据配置.变量获取 = 0 // 向数据库获取变量

 // 读配置
数据配置 = 服务端读入文件("/Sql.txt")
let PEI = 数据Json校验(数据配置)
!!如果(PEI)
数据配置 = 数据Json字符串到对象(数据配置)
##否则
服务端调试输出('数据库读写操作失败请检查 Sql.txt文件')
""如果结束()
 // 用于申明联想类型 可无视
var 玩家属性申明 = 申明自定义(玩家属性)
 // 
 // 脚本
脚本初始化(&脚本处理)
 // 关联项目
系统配置.职业配置 = 0 // 职业配置信息
系统配置.地图配置 = 0 // 地图所有信息
系统配置.NPC配置 = 0 // 所有NPC配置
系统配置.怪物配置 = 0 // 所有怪物基础属性
系统配置.刷怪配置 = 0 // 所有刷怪结果数组
系统配置.升级配置 = 0 // 所有升级经验表数组
系统配置.掉落配置 = 0 // 所有物品掉落表数组
系统配置.物品配置 = 0 // 所有物品配置
系统配置.附魔配置 = 0 // 所有附魔配置
系统配置.商城配置 = 0 // 所有商城配置
系统配置.摊位配置 = 0 // 所有摊位表
系统配置.技能配置 = 0 // 当前技能表
 // 加载配置文件
地图表加载()
怪物表加载()
刷怪表加载()
NPC表加载()
经验表加载()
掉落表加载()
物品表加载()
附魔表加载()
商城表加载()
摊位表加载()
技能表加载()


 // 
经验倍数 = 1
 // 
性别 = ['通用', '男', '女', '人妖']
 // 启动怪物刷新线程
线程启动('刷怪线程', 10)

 // 获取基础配置核心系统化
数据_读取职业表()



231000子程序名返回值类型异步公开备注8|10|4|4|6|61|2|3|4|5-6
230100客户进入
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000ID数值型
let ip = 服务端取用户信息(ID)
服务端调试输出(ip)
 // 


231000子程序名返回值类型异步公开备注8|10|4|4|6|61|2|3|4|5-6
230100客户离开
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000ID数值型
351100变量名类型备用备注6|6|4|41|2|3|4
350000Index数值型
350000玩家玩家类
 // 玩家离线清空数据，执行玩家离线事件

玩家 = 数组玩家[Index]
 // 下线时候先退出战场
Index = 玩家查找(ID)
!!如果(Index ==  - 1)
返回(0)
""如果结束()
 // 玩家断开就传送回来
!!如果(玩家.副本)
玩家.属性.地图ID = 玩家.上个地图ID
玩家.属性.x = 玩家.上个x
玩家.属性.y = 玩家.上个y

""如果结束()
 // 

 // 
玩家.开始PVP = 假
 // 退出副本
玩家.副本 = 假
 // 
玩家.副本到期时间 = 0
 // 清空怪物组 
玩家.怪物数组 = []
 // 
玩家.攻击目标 = 0
 // 内部清理数据

玩家离开(ID)

231000子程序名返回值类型异步公开备注8|10|4|4|6|61|2|3|4|5-6
230100客户消息
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000ID数值型
240000消息文本型
351100变量名类型备用备注6|8|4|41|2|3|4
350000Json消息对象
let arr = 文本分割(消息, '\\')
Json = 消息序列.反序列化(arr)
!!如果(Json == 未定义)
返回(0)
""如果结束()

 // 服务端调试输出('接受客户端消息:' + Json.Hex)
let str = 数据Json对象到字符串(Json)
服务端调试输出("H:" + str)


!!如果(Json.hex == 1000)
 // 登录
玩家登录(ID, Json)

#*否则如果(Json.hex == 1001)
登录创建角色(ID, Json)

#*否则如果(Json.hex == 6001)
玩家注册(ID, Json)

#*否则如果(Json.hex == 6002)
角色创建(ID, Json)
#*否则如果(Json.hex == 6003)
npc脚本解析(ID, Json)

#*否则如果(Json.hex == 6004)
玩家开启探险(ID, Json)
#*否则如果(Json.hex == 6005)
玩家开启战斗(ID, Json)
#*否则如果(Json.hex == 6006)
 // 已经取消
 // 玩家击杀怪物(ID, Json)
#*否则如果(Json.hex == 6007)
 // 玩家移动
玩家移动(ID, Json)

#*否则如果(Json.hex == 6100)
玩家停止战斗(ID, Json)
#*否则如果(Json.hex == 7000)
 // 已取消

#*否则如果(Json.hex == 1003)
 // 玩家提交复活方式
玩家复活(ID, Json)

#*否则如果(Json.hex == 2001)
 // 
玩家使用道具(ID, Json)

#*否则如果(Json.hex == 2002)
 // 玩家查看道具
玩家查看道具(ID, Json)

#*否则如果(Json.hex == 2003)
玩家卖出道具(ID, Json)

#*否则如果(Json.hex == 2004)
 // 玩家查看道具
玩家查看商品(ID, Json)
#*否则如果(Json.hex == 2008)
 // 玩家查看道具
玩家查看排行(ID, Json)




#*否则如果(Json.hex == 3000)
 // 玩家发送聊天消息
玩家聊天处理(ID, Json)
#*否则如果(Json.hex == 100000)
玩家获取PVP人物(ID, Json)
#*否则如果(Json.hex == 100001)
玩家挑战PVP人物(ID, Json)
#*否则如果(Json.hex == 100002)
玩家挑战PVP开始(ID, Json)
#*否则如果(Json.hex == 100003)
玩家挑战PVP停止(ID, Json)

#*否则如果(Json.hex == 5000)
 // 玩家获取排行榜(ID, Json)
#*否则如果(Json.hex == 8000)
 // 玩家挑战系统(ID, Json)

#*否则如果(Json.hex == 2012)
 // 玩家点击摊位
玩家点击摊位(ID, Json)


#*否则如果(Json.hex == 2013)
 // 玩家点击摊位
玩家开始摆摊(ID, Json)
#*否则如果(Json.hex == 2014)
玩家离开摆摊(ID, Json)

#*否则如果(Json.hex == 2100)
数据接受_队伍接受(ID, Json)

#*否则如果(Json.hex == 4000)
 // 所有网络玩家操作都是这个
数据接受_网玩操作(ID, Json)

""如果结束()

231000子程序名返回值类型异步公开备注8|10|4|4|6|121|2|3|4|5-6
230100网页消息
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000Type数值型客户端套接字
240000数据文本型传过来的数据






